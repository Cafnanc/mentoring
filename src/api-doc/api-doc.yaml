---
openapi: 3.0.0
info:
  title: Elevate Notification
  version: 1.0.0
  termsOfService: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
  description: >-
    - The Notification Service is a centralized Service to support other services. Apis perform operations related to sending email notification etc 

    - The URL for Users API(s) is `{context}/notification/v1`
    - <b>Note:</b> These resources can be used in other services
  contact:
    email: info@sunbird.org
servers:
  - url: http://localhost:3002
    description: local dev
  - url: https://dev.elevate-apis.shikshalokam.org
    description: dev server

paths:
  '/notification/v1/email/send':
    post:
      summary: Send email
      tags:
        - Email APIs
      description: "This Api is associated with sending email througt api \n - Then
        Endpoint for sending email `/notification/v1/email/send` \n - It is mandatory to
        provide values for parameter marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      requestBody:
        description: Request body consist of metadata and accepts payload as JSON
        content:
          application.json:
            schema:
              '$ref': '#/components/schemas/email/emailSendRequest'
      responses:
        '200':
          description: OK. Email Sent.
          content:
            application.json:
              schema:
                '$ref': '#/components/schemas/email/emailSendResponse200'
        '400':
          description: Bad Request.
          content:
            application.json:
              schema:
                '$ref': '#/components/schemas/email/emailSendResponse400'
components:
  schemas:
    email:
      emailSendRequest:
        description: Email Sent request
        type: object
        required:
          - type
          - email
        properties:
          type:
            type: string
            description: It should be email
            example: email
            required: true
          email:
            type: object
            required:
              - to
              - subject
              - body
            properties:
              to:
                type: string
                description: Email id of recipient. Multiple emails are added with `,`
                example: example@mail.com
                required: true
              cc:
                type: string
                description: Email id of recipient. Multiple emails are added with `,`
                example: ccexample@mail.com
              subject:
                type: string
                description: Subject of email
                example: This is subject
                required: true
              body:
                type: string
                description: Body of Email
                example: This is body of Email
                required: true
      emailSendResponse200:
        description: Email Sent response
        type: object
        properties:
          message:
            type: string
            example: successfully mail sent
          result:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: successfully mail sent
      emailSendResponse400:
        description: Email Sent response
        type: object
        properties:
          message:
            type: string
            example: mail cant be sent
          status:
            type: string
            example: failure
          statusCode:
            type: number
            example: 400
          error:
            type: array
            example: []
  securitySchemes:
    bearer:
      type: apiKey
      name: X-auth-token
      in: header
