openapi: 3.0.0
info:
  title: Elevate Mentoring
  version: 1.0.0
  description: >-
    - The Mentoring Service is a centralized service that supports other
    services. Application Programming Interfaces (APIs) exposed by the Mentoring
    Service can be used to perform operations related to other entities such as
    users, mentors, mentees, and sessions.  

    - The URL to access the Mentoring API(s) is `{context}/mentoring/v1` -
    <b>Note:</b> These resources can be used in other services.
  contact:
    email: tech-infra@shikshalokam.org
servers:
  - url: http://localhost:3002
    description: local server
  - url: https://dev.elevate-apis.shikshalokam.org
    description: dev server
paths:
  /mentoring/v1/form/create:
    post:
      summary: Create form
      tags:
        - Form APIs
      description: |-
        You can use this API to create a form  
         - The API Endpoint for creating a form is `/mentoring/v1/form/create` 
         - It is mandatory to provide values for parameters which are marked as `required` 
         - This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This token is
            available in the login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/form/createFormRequest'
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/form/createForm200Response'
        '400':
          description: Bad Request
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/form/createForm400Response'
  /mentoring/v1/form/update/{formId}:
    patch:
      summary: Update form
      tags:
        - Form APIs
      description: |-
        You can use this API to update a form.  
         - The API Endpoint for updating a form is `/mentoring/v1/form/update/{formId}` 
         - It is mandatory to provide values for parameters which are marked as `required` 
         - This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This token is
            available in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: formId
          required: true
          description: Please append a valid form Id to the Request URL.
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/form/updateFormRequest'
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/form/updateForm200Response'
        '400':
          description: Bad Request
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/form/updateForm400Response'
  /mentoring/v1/form/read/{formID}:
    get:
      summary: Get form data
      tags:
        - Form APIs
      description: |-
        You can use this API to read data from a form.  
         - The API Endpoint to read form data is `/mentoring/v1/form/read/{formID}` 
         - It is mandatory to provide values for parameters which are marked as `required` 
         - This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This token is
            available in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: formId
          required: false
          description: Please append a valid form Id to the Request URL.
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/form/readFormRequest'
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/form/readForm200Response'
        '400':
          description: Bad Request
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/form/readForm400Response'
  /mentoring/v1/entity/create:
    post:
      summary: Create user entity
      tags:
        - Entity APIs
      description: |-
        You can use this API to create a user entity  
         - The API Endpoint for creating a user entity is `/mentoring/v1/entity/create` 
         - It is mandatory to provide values for parameters which are marked as `required` 
         - This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This is available in
            the login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/entity/createUserEntityRequest'
      responses:
        '201':
          description: Created
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/entity/createUserEntity201Response'
        '400':
          description: Bad Request. User Entity already exists.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/entity/createUserEntity400Response'
  /mentoring/v1/entity/update/{id}:
    patch:
      summary: Update user entity
      tags:
        - Entity APIs
      description: |-
        Use this API to update a user entity.   
         - The API Endpoint to update a user entity is `/mentoring/v1/entity/update` 
         - It is mandatory to provide values for parameters which are marked as `required` 
         - This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token, which is available in
            the login API response.
          required: true
          schema:
            type: string
        - in: path
          name: 'id '
          required: true
          description: Please append a valid user entity ID to the Request URL.
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/entity/updateUserEntityRequest'
      responses:
        '202':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/entity/updateUserEntity202Response'
        '400':
          description: Bad Request. User Entity Not Found
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/entity/updateUserEntity400Response'
  /mentoring/v1/entity/read?type={type}&deleted={deleted}&status={Status}:
    get:
      summary: Get user entity details
      tags:
        - Entity APIs
      description: |-
        Use this API to read the details of a user entity.   
         - The API Endpoint for reading the details of the user entity is `/mentoring/v1/entity/read` 
         - It is mandatory to provide values for parameters which are marked as `required` 
         - This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token, which is available in
            the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          description: Please append a valid type of role.
          schema:
            type: string
          example: roles
        - in: path
          name: deleted
          description: >-
            Please append a deleted type. For example, for a deleted user, the
            type could be `true` while for an existing user, the type could be
            `false`.
          schema:
            type: string
          example: 'false'
        - in: path
          name: status
          description: >-
            Please append a status of the user. For example, for an active user,
            specify the value  `ACTIVE` while for a disabled user, specify the
            value `DISABLED`.
          schema:
            type: string
          example: ACTIVE
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/entity/readUserEntity200Response'
  /mentoring/v1/entity/delete/{id}:
    patch:
      summary: Delete user entity
      tags:
        - Entity APIs
      description: |-
        You can use this API to delete a user entity.   
         - The API Endpoint for deleting a user entity is `/mentoring/v1/entity/delete` 
         - It is mandatory to provide values for parameters which are marked as `required` 
         - This is a mandatory parameter and cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This token is
            available in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'id '
          required: true
          description: Please append a valid user entity ID to the Request URL.
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      responses:
        '202':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/entity/deleteUserEntity202Response'
        '400':
          description: Bad Request. User Entity has already been deleted.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/entity/deleteUserEntity400Response'
  /mentoring/v1/sessions/list?page={page}&limit={limit}&status={status}&search={search}:
    get:
      summary: Get list of sessions
      tags:
        - Session APIs
      description: >-
        You can use this API to get a list of session based on certain
        conditions 
         - The API Endpoint for getting a list of sessions is `/mentoring/v1/sessions/list` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          required: true
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          schema:
            type: string
        - in: path
          name: page
          description: Please add page number
          schema:
            type: number
          example: 1
        - in: path
          name: limit
          description: Number of records to limit
          schema:
            type: number
          example: 2
        - in: path
          name: status
          description: >-
            Please append a status. For example, for published user append the
            value `published` and for completed user, append the value
            `completed`.
          schema:
            type: string
          example: published, completed
        - in: path
          name: search
          description: >-
            Please search for information such as author name or title of
            session.
          schema:
            type: string
          example: John
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/getSessionList200Response'
        '400':
          description: Bad Request. Session Not Found
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/getSessionList400Response'
  /mentoring/v1/sessions/details/{sessionId}:
    get:
      summary: Get session details
      tags:
        - Session APIs
      description: |-
        You can use this API to get details of the session 
         - The API Endpoint for getting the details of the session is `/mentoring/v1/sessions/details` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'sessionId '
          required: true
          description: Please append a valid sessionId to the Request URL.
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      responses:
        '201':
          description: Created
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/getSessionDetails200Response'
        '400':
          description: Bad Request. The session could not be found.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/getSessionDetails400Response'
  /mentoring/v1/sessions/share/{sessionId}:
    get:
      summary: Share session details
      tags:
        - Session APIs
      description: |-
        You can use this API to share session 
         - The API Endpoint for sharing a session is: `/mentoring/v1/sessions/share` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'sessionId '
          required: true
          description: Please append a valid sessionId to the Request URL..
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/shareSession200Response'
        '400':
          description: Bad Request. The session could not be found.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/shareSession400Response'
  /mentoring/v1/sessions/enroll/{sessionId}:
    post:
      summary: Enroll for a session
      tags:
        - Session APIs
      description: |-
        You can use this API to enroll for a session 
         - The API Endpoint to enroll for a session is: `/mentoring/v1/sessions/enroll` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API., which is available in
            the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'sessionId '
          required: true
          description: Please append a valid sessionId to the Request URL..
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/enrollSession200Response'
        '400':
          description: Bad Request. The user is already enrolled for the session.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/enrollSession400Response'
  /mentoring/v1/sessions/unenroll/{sessionId}:
    post:
      summary: Cancel enrollment from a session
      tags:
        - Session APIs
      description: |-
        You can use this API to cancel the enrollment for a session 
         - The API Endpoint for cancelling enrollment for a session is `/mentoring/v1/sessions/unenroll` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'sessionId '
          required: true
          description: Please append a valid sessionId to the Request URL.
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/unenrollSession200Response'
        '400':
          description: Bad Request. The user is not enrolled for the session.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/unenrollSession400Response'
  /mentoring/v1/sessions/start/{sessionId}:
    get:
      summary: Start Session
      tags:
        - Session APIs
      description: |-
        You can use this API to start a session 
         - The API Endpoint for starting a session is: `/mentoring/v1/sessions/start` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'sessionId '
          required: true
          description: Please append a valid session id to the Request URL.
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/startSession200Response'
        '400':
          description: Bad Request. The session could not be found.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/startSession400Response'
        '500':
          description: Bad Request. Unable to create a meeting.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/startSession500Response'
  /mentoring/v1/sessions/update:
    post:
      summary: Create Session
      tags:
        - Session APIs
      description: |-
        You can use this API to create a session 
         - The API Endpoint for creating a session is: `/mentoring/v1/sessions/update` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/sessions/createSessionRequest'
      responses:
        '201':
          description: created
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/createSession201Response'
        '400':
          description: Bad Request. Create Session Error
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/createSession400Response'
  /mentoring/v1/sessions/update/{sessionId}:
    delete:
      summary: Delete session
      tags:
        - Session APIs
      description: |-
        You can use this API to delete a session 
         - The API Endpoint for deleting a session is: `/mentoring/v1/sessions/update` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'sessionId '
          required: true
          description: Please append a valid sessionId to the Request URL.
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      responses:
        '202':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/deleteSession202Response'
        '400':
          description: Bad Request. The session could not be found.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/deleteSession400Response'
    post:
      summary: Update session
      tags:
        - Session APIs
      description: |-
        You can use this API to update a session 
         - The API Endpoint for updating a session `/mentoring/v1/sessions/update` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/sessions/updateSessionRequest'
      responses:
        '202':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/updateSession202Response'
        '400':
          description: >-
            Bad Request. Encountered an Error while trying to update the
            session.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/updateSession400Response'
  mentoring/v1/sessions/getRecording/{sessionId}:
    get:
      summary: Get session recording
      tags:
        - Session APIs
      description: |-
        You can use this API to get the recording of a session 
         - The API Endpoint to get the recording of a session is: `/mentoring/v1/sessions/getRecording` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'sessionId '
          required: true
          description: Please append a valid sessionId to the Request URL.
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      responses:
        '200':
          description: OK
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/sessionRecording200Response'
        '400':
          description: Bad Request.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/sessionRecording400Response'
  /mentoring/v1/sessions/completed/{sessionId}:
    patch:
      summary: Update session status
      tags:
        - Session APIs
      description: |-
        You can use this API to update session status 
         - Endpoint for update session `/mentoring/v1/sessions/completed` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'sessionId '
          required: true
          description: Please append a valid sessionId to the Request URL.
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      responses:
        '200':
          description: OK
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/sessionCompleted200Response'
  /mentoring/v1/sessions/updateRecordingUrl/{internalSessionId}:
    patch:
      summary: Update session recording url
      tags:
        - Session APIs
      description: |-
        You can use this API to update session recording url 
         - Endpoint for update session recording url `/mentoring/v1/sessions/updateRecordingUrl` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'internalSessionId '
          required: true
          description: Please append a valid internalSessionId To the Request URL
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/updateRecordingUrl200Response'
        '400':
          description: Bad Request.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/sessions/updateRecordingUrl400Response'
  /mentoring/v1/mentees/sessions?enrolled={enrolled}&page={page}&limit={limit}:
    get:
      summary: Get list of session
      tags:
        - Mentee APIs
      description: |-
        This API is associated with listing session based on condition  
         - Endpoint for list session `/mentoring/v1/mentees/sessions` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: enrolled
          description: enrolled status of mentee `true`
          schema:
            type: boolean
          example: true
        - in: path
          name: page
          description: Please add page number
          schema:
            type: number
          example: 1
        - in: path
          name: limit
          description: number of record to limit
          schema:
            type: number
          example: 2
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentees/menteeSessionList200Response'
        '400':
          description: Bad Request. Session Not Found
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentees/menteeSession400Response'
  /mentoring/v1/mentees/joinSession/{sessionId}:
    get:
      summary: Join session as mentee
      tags:
        - Mentee APIs
      description: |-
        This API is associated with join session as mentee 
         - The API Endpoint forjoin session `/mentoring/v1/mentees/joinSession` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'sessionId '
          required: true
          description: Please append a valid sessionId to the Request URL.
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentees/menteeSessionList200Response'
        '400':
          description: Bad Request. join session error
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentees/menteeJoinSession400Response'
  /mentoring/v1/mentees/reports?filterType={filterType}:
    get:
      summary: Mentee reports
      tags:
        - Mentee APIs
      description: |-
        This API is associated with mentee report based on condition 
         - The API Endpoint formentee report `/mentoring/v1/mentees/joinSession` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'filterType '
          required: true
          description: >-
            Please append a valid filter type for reports such as `MONTHLY` or
            `QUARTERLY`
          schema:
            type: string
          example: QUARTERLY
      responses:
        '200':
          description: Ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentees/menteeSessionReport200Response'
  /mentoring/v1/mentees/homeFeed:
    get:
      summary: Get list of sessions
      tags:
        - Mentee APIs
      description: |-
        This API is associated with list of session 
         - The API Endpoint forlist session `/mentoring/v1/mentees/homeFeed` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentees/homefeed200Response'
  /mentoring/v1/mentees/profile:
    get:
      summary: Mentee profile
      tags:
        - Mentee APIs
      description: |-
        This API is associated with mentee profile 
         - Endpoint for list session `/mentoring/v1/mentees/profile` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentees/menteeProfile200Response'
  /mentoring/v1/mentors/profile/{mentorId}:
    get:
      summary: Mentor profile
      tags:
        - Mentor APIs
      description: |-
        This API is associated with mentor profile 
         - Endpoint for list session `/mentoring/v1/mentors/profile` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'mentorId '
          required: true
          description: Please append a valid mentorId
          schema:
            type: string
            example: 62a820225ff93f30cfe5f990
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentors/mentorProfile200Response'
        '400':
          description: Bad request
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentors/mentorProfile400Response'
  /mentoring/v1/mentors/reports?filterType={filterType}:
    get:
      summary: Mentors reports
      tags:
        - Mentor APIs
      description: |-
        This API is associated with mentor reports 
         - The API Endpoint forlist session `/mentoring/v1/mentors/reports` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'filterType '
          required: true
          description: >-
            Please append a valid filter Type for reports like `MONTHLY` or
            `QUARTERLY`
          schema:
            type: string
          example: QUARTERLY
      responses:
        '200':
          description: Ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentors/mentorSessionReport200Response'
  /mentoring/v1/mentors/upcomingSessions/{mentorId}?page={page}&limit={limit}&search={search}:
    get:
      summary: Upcoming sessions of mentor
      tags:
        - Mentor APIs
      description: >-
        This API is associated with the listing of upcoming sessions of one
        mentor 
         - Endpoint for listing session `/mentoring/v1/mentors/upcomingSessions/` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          required: true
          in: header
          description: >-
            To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          schema:
            type: string
        - in: path
          name: 'mentorId '
          required: true
          description: Please append a valid mentorId
          schema:
            type: string
            example: 62a820225ff93f30cfe5f990
        - in: path
          name: page
          description: Please add page number
          schema:
            type: number
          example: 1
        - in: path
          name: limit
          description: number of record to limit
          schema:
            type: number
          example: 2
        - in: path
          name: search
          description: Please search for author name or title of session etc.
          schema:
            type: string
          example: jhon
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentors/upcomingSession200Response'
        '400':
          description: Bad Request. Mentor Not Found
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentors/upcomingSession400Response'
  /mentoring/v1/questions/create:
    post:
      summary: Create questions
      tags:
        - Question APIs
      description: |-
        This API is associated with creating questions 
         - The API Endpoint forcreate question `/mentoring/v1/questions/create` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/questions/createQuestionRequest'
      responses:
        '201':
          description: Created
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/questions/createQuestionResponse201'
  /mentoring/v1/questions/update/{QuestionId}:
    patch:
      summary: Update questions
      tags:
        - Question APIs
      description: |-
        This API is associated with updating questions 
         - The API Endpoint forupdate question `/mentoring/v1/questions/update` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: QuestionId
          required: true
          description: Please append a valid question id in url
          schema:
            type: string
          example: 629978caf0cf0901d7d74d12
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/questions/updateQuestionRequest'
      responses:
        '202':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/questions/updateQuestionResponse202'
        '400':
          description: Bad Request
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/questions/updateQuestionResponse400'
  /mentoring/v1/questions/read/{QuestionId}:
    get:
      summary: Get questions
      tags:
        - Question APIs
      description: |-
        This API is associated with getting questions 
         - The API Endpoint forget question `/mentoring/v1/questions/read` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: QuestionId
          required: true
          description: Please append a valid question id in url
          schema:
            type: string
          example: 629978caf0cf0901d7d74d12
      responses:
        '200':
          description: Ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/questions/readQuestionResponse200'
        '400':
          description: Bad Request
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/questions/readQuestionResponse400'
  /mentoring/v1/questionsSet/create:
    post:
      summary: Create question set
      tags:
        - Question Set APIs
      description: |-
        This API is associated with creating questions set 
         - The API Endpoint forcreate question set `/mentoring/v1/questionsSet/create` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/questionset/createQuestionSetRequest'
      responses:
        '201':
          description: Created
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/questionset/createQuestionSetResponse201'
        '400':
          description: Bad Request
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/questionset/createQuestionSetResponse400'
  /mentoring/v1/questionsSet/update/{QuestionSetId}:
    patch:
      summary: Update question set
      tags:
        - Question Set APIs
      description: |-
        This API is associated with updating questions set 
         - The API Endpoint forupdating question set `/mentoring/v1/questionsSet/update` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: QuestionSetId
          required: true
          description: Please append a valid question set id in url
          schema:
            type: string
          example: 629978caf0cf0901d7d74d12
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/questionset/updateQuestionSetRequest'
      responses:
        '202':
          description: Accepted
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/questionset/updateQuestionSetResponse202'
        '400':
          description: Bad Request
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/questionset/updateQuestionSetResponse400'
  /mentoring/v1/questionsSet/read/{QuestionSetId}:
    get:
      summary: Get question set
      tags:
        - Question Set APIs
      description: |-
        This API is associated with getting questions set 
         - The API Endpoint forget question set `/mentoring/v1/questionsSet/read` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: QuestionSetId
          required: true
          description: Please append a valid question set id in url
          schema:
            type: string
          example: 629978caf0cf0901d7d74d12
      responses:
        '200':
          description: Ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/questionset/readQuestionSetResponse200'
        '400':
          description: Bad Request
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/questionset/readQuestionSetResponse400'
  /mentoring/v1/feedback/forms/{SessionId}:
    get:
      summary: Get feedback form
      tags:
        - Feedback Form APIs
      description: |-
        This API is associated with getting feedback forms of the session.  
         - The API Endpoint forget feedback form `/mentoring/v1/feedback/forms` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: SessionId
          required: true
          description: Please append a valid session id in url
          schema:
            type: string
          example: 629978caf0cf0901d7d74d12
      responses:
        '200':
          description: Ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/feedback/getFeedbackFromResponse200'
        '400':
          description: Bad Request
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/feedback/getFeedbackFormResponse400'
  /mentoring/v1/feedback/submit/{SessionId}:
    post:
      summary: Submit feedback
      tags:
        - Feedback Form APIs
      description: |-
        This API is associated with submitting feedback forms of a session.  
         - The API Endpoint forsubmit feedback form `/mentoring/v1/feedback/submit` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: SessionId
          required: true
          description: Please append a valid session id in url
          schema:
            type: string
          example: 629978caf0cf0901d7d74d12
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/feedback/submitFeedbackRequest'
      responses:
        '200':
          description: OK
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/feedback/submitFeedbackResponse200'
        '400':
          description: Bad Request
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/feedback/submitFeedbackResponse400'
        '422':
          description: Unprocessable Entity
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/feedback/submitFeedbackResponse422'
  /mentoring/v1/users/pendingFeedbacks:
    get:
      summary: Users pending feedback
      tags:
        - Users APIs
      description: |-
        This API is associated with fetching users pending feedback form 
         - The API Endpoint forfetching feedback form `/mentoring/v1/users/pendingFeedbacks` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/users/feedbackResponse200'
  /user/v1/cloud-services/getSignedUrl?fileName={fileName}:
    get:
      summary: Cloud services get signed url
      tags:
        - Cloud Services APIs
      description: |-
        This API is associated with the cloud services for getting signed URL  
         - Then The API Endpoint forcloud services `/user/v1/cloud-services/file/getSignedUrl` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: fileName
          required: true
          description: Please append a valid file name to url which has to be uploaded
          schema:
            type: string
          example: image.jpg
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/cloudServices/cloudServicesResponse200'
  /user/v1/cloud-services/getDownloadableUrl?filePath={filePath}:
    get:
      summary: Cloud services get download url
      tags:
        - Cloud Services APIs
      description: >-
        This API is associated with the cloud services for getting downloadable
        URL  
         - Then The API Endpoint forcloud services `/user/v1/cloud-services/file/getDownloadableUrl` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: filePath
          required: true
          description: Please append a valid file path to url which has to be downloaded
          schema:
            type: string
          example: users/62832531a05cbd57b273aebb-1654149589875-image.jpg
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: >-
                  #/components/schemas/cloudServices/cloudServicesDownloadResponse200
  /notification/v1/email/send:
    post:
      summary: Send email
      tags:
        - Email APIs
      description: |-
        This API is associated with sending email through API 
         - Then The API Endpoint forsending email `/notification/v1/email/send` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: internal_access_token
          in: header
          description: To make use of the API, you require internal access token.
          required: true
          schema:
            type: string
      requestBody:
        description: Request body consist of metadata and accepts payload as JSON
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/email/emailSendRequest'
      responses:
        '200':
          description: OK. Email sent successfully.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/email/emailSendResponse200'
        '400':
          description: Bad Request.
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/email/emailSendResponse400'
  /mentoring/v1/users/list?type={userType}&page={page}&limit={limit}&search={search}:
    get:
      summary: List user
      tags:
        - Users APIs
      description: |-
        This API is associated with the listing of users based on condition  
         - The API Endpoint forlist user `/mentoring/v1/users/list` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: userType
          description: Type of user
          required: true
          schema:
            type: string
          example: mentor
        - in: path
          name: page
          description: Please add page number
          schema:
            type: number
          example: 1
        - in: path
          name: limit
          description: number of record to limit
          schema:
            type: number
          example: 2
        - in: path
          name: search
          description: Please search for name or title of user etc.
          schema:
            type: string
          example: jhon
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/users/userList200Response'
  mentoring/v1/mentors/share/{mentorId}:
    get:
      summary: Share mentor profile
      tags:
        - Mentor APIs
      description: |-
        This API is associated with mentor profile 
         - Endpoint for share mentor profile is `/mentoring/v1/mentors/share` 
         - It is mandatory to provide values for parameters marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'mentorId '
          required: true
          description: Please append a valid mentorId
          schema:
            type: string
            example: 62a820225ff93f30cfe5f990
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentors/shareMentorProfile200Response'
        '400':
          description: Bad request
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/mentors/shareMentorProfile400Response'
  /mentoring/v1/issues/create:
    post:
      summary: Report an issue
      tags:
        - Issues APIs
      description: |-
        This Api is associated with reporting issues 
         - The Endpoint for creating an issue is `/mentoring/v1/issues/create` 
         - It is mandatory to provide values for parameter marked with `required` 
         - Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application.json:
            schema:
              $ref: '#/components/schemas/issues/createRequest'
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/issues/createResponse'
        '422':
          description: Unprocessable Entity
          content:
            application.json:
              schema:
                $ref: '#/components/schemas/issues/create422Response'
  /mentoring/v1/config/get:
    get:
      description: ''
      operationId: /mentoring/v1/platform/config
      tags:
        - Config APIs
      parameters: []
      requestBody: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/config'
              examples:
                Success  Response:
                  value:
                    responseCode: OK
                    message: App config fetched successfully
                    result:
                      meetingPlatform: 'OFF'
                      reportIssue:
                        to: support@xyz.com,team@xyz.com
                        subject: Support request for MentorED
                    meta:
                      formsVersion:
                        - _id: 6473b164c4a896503f61fda2
                          type: session
                        - _id: 6473b164c4a896503f61fda3
                          type: profile
                        - _id: 6473b164c4a896503f61fda4
                          type: termsAndConditions
                        - _id: 6473b164c4a896503f61fda5
                          type: faq
                        - _id: 6473b164c4a896503f61fda6
                          type: helpVideos
                      correlation: a677494a-b89c-441c-8bdf-70fc91c7136d
                      meetingPlatform: 'OFF'
      summary: Get app config
components:
  schemas:
    form:
      createFormRequest:
        type: object
        required:
          - type
          - subType
          - action
          - data
        properties:
          type:
            type: string
            example: profile
          subType:
            type: string
            example: profileForm
          action:
            type: string
            example: profileFields
          data:
            type: object
            properties:
              templateName:
                type: string
                example: defaultTemplate
              fields:
                type: object
                properties:
                  controls:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: name
                        label:
                          type: string
                          example: name
                        value:
                          type: string
                          example: ''
                        class:
                          type: string
                          example: ion-margin
                        type:
                          type: string
                          example: text
                        position:
                          type: string
                          example: floating
                        validators:
                          type: object
                          properties:
                            required:
                              type: boolean
                              example: true
                            minLength:
                              type: number
                              example: 10
      createForm200Response:
        description: Created
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Form created successfully
          result:
            type: array
            example: []
      createForm400Response:
        description: Bad Request. Form Already Exist
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Form already exists
          error:
            type: array
            example: []
      updateFormRequest:
        type: object
        required:
          - type
          - subType
          - action
          - data
        properties:
          type:
            type: string
            example: profile
          subType:
            type: string
            example: profileForm
          action:
            type: string
            example: profileFields
          data:
            type: object
            properties:
              templateName:
                type: string
                example: defaultTemplate
              fields:
                type: object
                properties:
                  controls:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: name
                        label:
                          type: string
                          example: name
                        value:
                          type: string
                          example: ''
                        class:
                          type: string
                          example: ion-margin
                        type:
                          type: string
                          example: text
                        position:
                          type: string
                          example: floating
                        validators:
                          type: object
                          properties:
                            required:
                              type: boolean
                              example: true
                            minLength:
                              type: number
                              example: 10
      updateForm200Response:
        description: Updated
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Form updated successfully
          result:
            type: array
            example: []
      updateForm400Response:
        description: Bad Request. Form Already Exist
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Form already exists
          error:
            type: array
            example: []
      readFormRequest:
        type: object
        properties:
          type:
            type: string
            example: profile
          subType:
            type: string
            example: profileForm
          action:
            type: string
            example: profileFields
          templateName:
            type: string
            example: defaultTemplate
      readForm200Response:
        description: Read
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Form fetched successfully
          result:
            type: object
            properties:
              type:
                type: string
                example: profile
              subType:
                type: string
                example: profileForm
              action:
                type: string
                example: profileFields
              updatedAt:
                type: string
                example: '2022-05-24T23:14:10.080Z'
              createdAt:
                type: string
                example: '2022-05-24T23:14:10.080Z'
              __v:
                type: number
                example: 0
              _id:
                type: string
                example: 628d66c28069a73506cb4b2d
              data:
                type: object
                properties:
                  templateName:
                    type: string
                    example: defaultTemplate
                  fields:
                    type: object
                    properties:
                      controls:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: name
                            label:
                              type: string
                              example: name
                            value:
                              type: string
                              example: ''
                            class:
                              type: string
                              example: ion-margin
                            type:
                              type: string
                              example: text
                            position:
                              type: string
                              example: floating
                            validators:
                              type: object
                              properties:
                                required:
                                  type: boolean
                                  example: true
                                minLength:
                                  type: number
                                  example: 10
      readForm400Response:
        description: Bad Request. Form not found
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Form not found
          error:
            type: array
            example: []
    entity:
      createUserEntityRequest:
        type: object
        required:
          - value
          - label
          - type
        properties:
          value:
            type: string
            example: HM
          label:
            type: string
            example: Head Master
          type:
            type: string
            example: roles
      createUserEntity201Response:
        type: object
        description: User entity created
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: User entity created successfully
          result:
            type: array
            example: []
      createUserEntity400Response:
        type: object
        description: User entity already exist
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User entity already exists
          error:
            type: array
            example: []
      updateUserEntityRequest:
        type: object
        description: User entity update request
        required:
          - value
          - label
          - type
          - status
        properties:
          value:
            type: string
            example: HM
          label:
            type: string
            example: Head Master
          status:
            type: string
            example: DISABLED
          type:
            type: string
            example: roles
      updateUserEntity202Response:
        type: object
        description: User Entity Updated
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: User entity updated successfully
          result:
            type: array
            example: []
      updateUserEntity400Response:
        type: object
        description: User Entity Not Found
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User entity not found
          error:
            type: array
            example: []
      readUserEntity200Response:
        description: User Entity fetched
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: User entity fetched successfully
          result:
            type: array
            items:
              type: object
              properties:
                value:
                  type: string
                  example: HM
                label:
                  type: string
                  example: Head Master
      deleteUserEntity202Response:
        type: object
        description: User Entity Deleted
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: User entity deleted successfully
          result:
            type: array
            example: []
      deleteUserEntity400Response:
        type: object
        description: User Entity Deleted
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User entity already deleted
          error:
            type: array
            example: []
    sessions:
      getSessionList200Response:
        description: list of all sessions
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Session fetched successfully.
          result:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: 628dae0fce0ce9359aeb8b23
                    title:
                      type: string
                      example: Leadership5
                    description:
                      type: string
                      example: Training in leadership
                    image:
                      type: array
                      items:
                        type: string
                        example: '["users/1232s2133sdd1-12e2dasd3123.png"]'
                    mentorName:
                      type: string
                      example: Ankit
                    status:
                      type: string
                      example: published
                    startDate:
                      type: string
                      example: '2022-01-04 18:00:00'
                    endDate:
                      type: string
                      example: '2022-01-04 18:30:00'
                    endDateUtc:
                      type: string
                      example: Invalid date
              count:
                type: number
                example: 1
            meta:
              type: object
              example: {}
      getSessionList400Response:
        type: object
        description: Session not found.
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Session not found.
          error:
            type: array
            example: []
      getSessionDetails200Response:
        description: Details of session
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Session fetched successfully.
          result:
            type: object
            properties:
              _id:
                type: string
                example: 628dae0fce0ce9359aeb8b23
              title:
                type: string
                example: Leadership5
              description:
                type: string
                example: Training in leadership
              recommendedFor:
                type: array
                items:
                  type: string
                  example: '[{"label":"HM", "value": 1}]'
              categories:
                type: array
                items:
                  type: string
                  example: '[{"label": "label", "value": "value"}]'
              medium:
                type: array
                items:
                  type: string
                  example: '[{"label":"Hindi", "value": 2 }]'
              image:
                type: array
                items:
                  type: string
                  example: '["users/1232s2133sdd1-12e2dasd3123.png"]'
              userId:
                type: string
                example: 62832531a05cbd57b273aebb
              mentorName:
                type: string
                example: jhon
              status:
                type: string
                example: published
              deleted:
                type: boolean
                example: false
              startDate:
                type: string
                example: '2022-01-04 18:00:00'
              endDate:
                type: string
                example: '2022-01-04 18:30:00'
              startDateUtc:
                type: string
                example: Invalid date
              endDateUtc:
                type: string
                example: Invalid date
              skippedFeedback:
                type: boolean
                example: false
              menteeFeedbackForm:
                type: string
                example: menteeQS1
              mentorFeedbackForm:
                type: string
                example: mentorQS2
              recordingUrl:
                type: string
                example: null
              internalMeetingId:
                type: string
                example: null
              feedbacks: []
              updatedAt:
                type: string
                example: '2022-05-25T04:18:23.942Z'
              createdAt:
                type: string
                example: '2022-05-25T04:18:23.942Z'
              __v:
                type: number
                example: 0
              isEnrolled:
                type: boolean
                example: false
          meta: {}
      getSessionDetails400Response:
        type: object
        description: Session not found.
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Session not found.
          error:
            type: array
            example: []
      shareSession200Response:
        description: share session details
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Session link generated successfully.
          result:
            type: object
            properties:
              shareLink:
                type: string
                example: 45fd48791a7a9d589aaa2d1b7f3f8dd7
          meta: {}
      shareSession400Response:
        description: Session not found.
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Session not found.
          error:
            type: array
            example: []
      enrollSession200Response:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: You have successfully enrolled for this session.
          result:
            type: array
            example: []
          meta: {}
      enrollSession400Response:
        description: Session not found.
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User is already enrolled for this session.
          error:
            type: array
            example: []
      unenrollSession200Response:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: You are no longer enrolled in this session.
          result:
            type: array
            example: []
          meta: {}
      unenrollSession400Response:
        description: Session not found.
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User is not enrolled for this session.
          error:
            type: array
            example: []
      startSession200Response:
        description: Share session details
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Successfully fetched the link for starting the session.
          result:
            type: object
            properties:
              link:
                type: string
                example: >-
                  https://dev.mentoring.shikshalokam.org/bigbluebutton/api/join?meetingID=628dae0fce0ce9359aeb8b23&password=$2a$10$PI3yKdwMSbPkl5hn1043n.L3ooeRqnlx024h2EmGfSxxrGy76cwW2&fullName=Ankit&checksum=02261702f22f1c405d39e8bb3dd1f1b88646a4ed
          meta: {}
      startSession400Response:
        description: Session not found.
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example:
              - Session not found.
              - Mentor not found.
              - The user is not a mentor.
              - You cannot start another mentor's session.
              - You can start the session 10 minutes before the scheduled time.
          error:
            type: array
            example: []
      startSession500Response:
        description: Could not create meeting.
        type: object
        properties:
          responseCode:
            type: string
            example: SERVER_ERROR
          message:
            type: string
            example: Unable to create the meeting.
          error:
            type: array
            example: []
      createSessionRequest:
        type: object
        required:
          - title
          - description
          - startDate
          - endDate
          - recommendedFor
          - categories
          - medium
        properties:
          title:
            type: string
            example: testing
          description:
            type: string
            example: Training in leadership
          startDate:
            type: string
            example: '2022-01-04 18:00:00'
          endDate:
            type: string
            example: '2022-01-04 18:30:00'
          recommendedFor:
            type: array
            items:
              type: object
              properties:
                label:
                  type: string
                  example: HM
                value:
                  type: number
                  example: 1
          categories:
            type: array
            items:
              type: object
              properties:
                label:
                  type: string
                  example: label
                value:
                  type: number
                  example: value
          medium:
            type: array
            items:
              type: object
              properties:
                label:
                  type: string
                  example: Hindi
                value:
                  type: number
                  example: 2
          image:
            type: array
            items:
              type: string
              example: users/1232s2133sdd1-12e2dasd3123.png
      createSession201Response:
        type: object
        description: User entity created
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Session created successfully.
          result:
            type: object
            properties:
              title:
                type: string
                example: testing
              description:
                type: string
                example: Training in leadership
              startDate:
                type: string
                example: '2022-01-04 18:00:00'
              endDate:
                type: string
                example: '2022-01-04 18:30:00'
              recommendedFor:
                type: array
                items:
                  type: object
                  properties:
                    label: HM
                    value: 1
              categories:
                type: array
                items:
                  type: object
                  properties:
                    label: label
                    value: value
              medium:
                type: array
                items:
                  type: object
                  properties:
                    label: Hindi
                    value: 2
              image:
                type: array
                items:
                  type: string
                  example: users/1232s2133sdd1-12e2dasd3123.png
              userId:
                type: string
                example: 62832531a05cbd57b273aebb
              mentorName:
                type: string
                example: John
              status:
                type: string
                example: published
              deleted:
                type: boolean
                example: false
              startDateUtc:
                type: string
                example: Invalid date
              endDateUtc:
                type: string
                example: Invalid date
              skippedFeedback:
                type: boolean
                example: false
              menteeFeedbackForm:
                type: string
                example: menteeQS1
              mentorFeedbackForm:
                type: string
                example: mentorQS2
              recordingUrl:
                type: string
                example: null
              internalMeetingId:
                type: string
                example: null
              _id:
                type: string
                example: 628ee25e4b9243687f68431d
              feedbacks:
                type: array
                example: []
              updatedAt:
                type: string
                example: '2022-05-26T02:13:50.472Z'
              createdAt:
                type: string
                example: '2022-05-26T02:13:50.472Z'
              __v:
                type: number
                example: 0
      createSession400Response:
        description: Create Session Error.
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example:
              - User does not have the requisite permissions.
              - End time should be atleast 30 minutes after the start time.
              - >-
                Session cannot be created! Session duration should be less than
                24 hours.
          error:
            type: array
            example: []
      deleteSession202Response:
        description: Delete session
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Session successfully deleted. This session is no longer available.
          result:
            type: array
            example: []
          meta: {}
      deleteSession400Response:
        description: Delete session
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Session not found.
          result:
            type: array
            example: []
      updateSessionRequest:
        type: object
        properties:
          title:
            type: string
            example: testing
          description:
            type: string
            example: Training in leadership
          startDate:
            type: string
            example: '2022-01-04 18:00:00'
          endDate:
            type: string
            example: '2022-01-04 18:30:00'
          menteeFeedbackForm:
            type: string
            example: feedback
          mentorFeedbackForm:
            type: string
            example: feedback
          recommendedFor:
            type: array
            items:
              type: object
              properties:
                label:
                  type: string
                  example: HM
                value:
                  type: number
                  example: 1
          categories:
            type: array
            items:
              type: object
              properties:
                label:
                  type: string
                  example: label
                value:
                  type: number
                  example: value
          medium:
            type: array
            items:
              type: object
              properties:
                label:
                  type: string
                  example: Hindi
                value:
                  type: number
                  example: 2
          image:
            type: array
            items:
              type: string
              example: users/1232s2133sdd1-12e2dasd3123.png
      updateSession202Response:
        description: Updated the session
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Your session details have been updated.
          result:
            type: array
            example: []
          meta: {}
      updateSession400Response:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Session not found.
          error:
            type: array
            example: []
      sessionRecording200Response:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          result:
            type: object
            properties:
              recording:
                type: object
                properties:
                  recordID:
                    type: string
                    example: 26254f85cea8aa71d38c11f10acdbf5951ddbf5f-1650616238241
                  meetingID:
                    type: string
                    example: 626267aa2832e6cea85aa435
                  internalMeetingID:
                    type: string
                    example: 26254f85cea8aa71d38c11f10acdbf5951ddbf5f-1650616238241
                  name:
                    type: string
                    example: Okkkk
                  isBreakout:
                    type: boolean
                    example: false
                  published:
                    type: boolean
                    example: true
                  state:
                    type: string
                    example: published
                  startTime:
                    type: string
                    example: 1650616238241
                  endTime:
                    type: string
                    example: 1650616245013
                  participants:
                    type: string
                    example: 1
                  rawSize:
                    type: string
                    example: 35425
                  metadata:
                    type: object
                    properties:
                      meetingName:
                        type: string
                        example: Okkkk
                      isBreakout:
                        type: boolean
                        example: false
                      endcallbackurl:
                        type: string
                        example: >-
                          https://elevate-apis.shikshalokam.org/mentoring/v1/sessions/completed/626267aa2832e6cea85aa435
                      meetingId:
                        type: string
                        example: 626267aa2832e6cea85aa435
                  size:
                    type: string
                    example: 27256
                  playback:
                    type: object
                    properties:
                      format:
                        type: object
                        properties:
                          type:
                            type: string
                            example: video
                          url:
                            type: string
                            example: >-
                              https://mentoring.shikshalokam.org/presentation/26254f85cea8aa71d38c11f10acdbf5951ddbf5f-1650616238241/meeting.mp4
                          processingTime:
                            type: string
                            example: 576
                          length:
                            type: string
                            example: 0
                          size:
                            type: string
                            example: 27256
                  data:
                    type: object
                    example: {}
          meta:
            type: object
            example: {}
      sessionRecording400Response:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Session not found.
          error:
            type: array
            example: []
      sessionCompleted200Response:
        type: object
        properties:
          result:
            type: string
            example: SESSION_UPDATED
      updateRecordingUrl200Response:
        type: object
        properties:
          message:
            type: string
            example: Your session details have been updated.
          result:
            type: object
            example: {}
      updateRecordingUrl400Response:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Session not found.
          error:
            type: array
            example: []
    mentees:
      menteeSessionList200Response:
        description: List of all sessions
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Session fetched successfully.
          result:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: 628dae0fce0ce9359aeb8b23
                    title:
                      type: string
                      example: Leadership5
                    description:
                      type: string
                      example: Training in leadership
                    image:
                      type: array
                      items:
                        type: string
                        example: '["users/1232s2133sdd1-12e2dasd3123.png"]'
                    mentorName:
                      type: string
                      example: Ankit
                    status:
                      type: string
                      example: published
                    startDate:
                      type: string
                      example: '2022-01-04 18:00:00'
                    endDate:
                      type: string
                      example: '2022-01-04 18:30:00'
                    endDateUtc:
                      type: string
                      example: Invalid date
              count:
                type: number
                example: 1
            meta:
              type: object
              example: {}
      menteeSession400Response:
        type: object
        description: Session not found.
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Session not found.
          error:
            type: array
            example: []
      menteeJoinSession200Response:
        description: Share session details
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Successfully fetched session start link.
          result:
            type: object
            properties:
              link:
                type: string
                example: >-
                  https://dev.mentoring.shikshalokam.org/bigbluebutton/api/join?meetingID=628dae0fce0ce9359aeb8b23&password=$2a$10$PI3yKdwMSbPkl5hn1043n.L3ooeRqnlx024h2EmGfSxxrGy76cwW2&fullName=Ankit&checksum=02261702f22f1c405d39e8bb3dd1f1b88646a4ed
          meta: {}
      menteeJoinSession400Response:
        description: Session not found.
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example:
              - User not found.
              - Session not found.
              - As the host has ended the session, you cannot join.
              - Please wait for the Mentor to start the session.
              - User has not enrolled for the session.
          error:
            type: array
            example: []
      menteeSessionReport200Response:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Mentees report fetched successfully.
          result:
            type: object
            properties:
              totalSessionEnrolled:
                type: number
                example: 1
              totalsessionsAttended:
                type: number
                example: 1
          meta: {}
      homefeed200Response:
        description: home feed
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Session fetched successfully.
          result:
            type: object
            properties:
              allSessions:
                type: array
                example: []
              mySessions:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: 628dae0fce0ce9359aeb8b23
                    title:
                      type: string
                      example: Leadership5
                    description:
                      type: string
                      example: Training in leadership
                    image:
                      type: array
                      items:
                        type: string
                        example: '["users/1232s2133sdd1-12e2dasd3123.png"]'
                    mentorName:
                      type: string
                      example: jhon
                    status:
                      type: string
                      example: published
                    startDate:
                      type: string
                      example: '2022-01-04 18:00:00'
                    endDate:
                      type: string
                      example: '2022-01-04 18:30:00'
                    endDateUtc:
                      type: string
                      example: Invalid date
            meta:
              type: object
              example: {}
      menteeProfile200Response:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Profile fetched successfully.
          result:
            type: object
            properties:
              email:
                type: object
                properties:
                  verified:
                    type: boolean
                    example: false
                  address:
                    type: string
                    example: example@mail.com
              sessionAttended:
                type: string
                example: 1
              isAMentor:
                type: boolean
                example: false
              hasAcceptedTAndC:
                type: boolean
                example: false
              deleted:
                type: boolean
                example: false
              _id:
                type: string
                example: 62832531a05cbd57b273aebb
              name:
                type: string
                example: Ankit
              designation:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: number
                      example: 1
                    lable:
                      type: string
                      example: Teacher
              location:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: number
                      example: 1
                    lable:
                      type: string
                      example: Bangalore
              areasOfExpertise:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: number
                      example: 1
                    lable:
                      type: string
                      example: Educational Leadership
              languages:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: number
                      example: 1
                    lable:
                      type: string
                      example: English
              educationQualification:
                type: string
                example: B.A.
              updatedAt:
                type: datetime
                example: '2022-05-18T05:24:52.431Z'
              createdAt:
                type: datetime
                example: '2022-05-18T05:24:52.431Z'
              __v:
                type: number
                example: 0
              lastLoggedInAt:
                type: datetime
                example: '2022-05-18T05:24:52.431Z'
              about:
                type: string
                example: This is test about of mentee
              experience:
                type: string
                example: '4.2'
              gender:
                type: string
                example: MALE
              image:
                type: string
                example: https://cloudstorage.com/container/abc.png
    mentors:
      upcomingSession400Response:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Could not found mentor.
          error:
            type: array
            example: []
      upcomingSession200Response:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Upcoming session fetched successfully.
          result:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: 628dae0fce0ce9359aeb8b23
                    title:
                      type: string
                      example: Leadership5
                    description:
                      type: string
                      example: Training in leadership
                    image:
                      type: array
                      items:
                        type: string
                        example: '["users/1232s2133sdd1-12e2dasd3123.png"]'
                    mentorName:
                      type: string
                      example: Ankit
                    status:
                      type: string
                      example: published
                    startDate:
                      type: string
                      example: '2022-01-04 18:00:00'
                    endDate:
                      type: string
                      example: '2022-01-04 18:30:00'
                    endDateUtc:
                      type: string
                      example: Invalid date
              count:
                type: number
                example: 1
            meta:
              type: object
              example: {}
      mentorSessionReport200Response:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Mentors report fetched successfully.
          result:
            type: object
            properties:
              totalSessionEnrolled:
                type: number
                example: 1
              totalsessionsAttended:
                type: number
                example: 1
          meta: {}
      mentorProfile200Response:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Profile fetched successfully.
          result:
            type: object
            properties:
              email:
                type: object
                properties:
                  verified:
                    type: boolean
                    example: false
                  address:
                    type: string
                    example: example@mail.com
              sessionAttended:
                type: string
                example: 1
              isAMentor:
                type: boolean
                example: true
              hasAcceptedTAndC:
                type: boolean
                example: false
              deleted:
                type: boolean
                example: false
              _id:
                type: string
                example: 62832531a05cbd57b273aebb
              name:
                type: string
                example: Ankit
              designation:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: number
                      example: 1
                    lable:
                      type: string
                      example: Teacher
              location:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: number
                      example: 1
                    lable:
                      type: string
                      example: Bangalore
              areasOfExpertise:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: number
                      example: 1
                    lable:
                      type: string
                      example: Educational Leadership
              languages:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: number
                      example: 1
                    lable:
                      type: string
                      example: English
              educationQualification:
                type: string
                example: B.A.
              updatedAt:
                type: datetime
                example: '2022-05-18T05:24:52.431Z'
              createdAt:
                type: datetime
                example: '2022-05-18T05:24:52.431Z'
              __v:
                type: number
                example: 0
              lastLoggedInAt:
                type: datetime
                example: '2022-05-18T05:24:52.431Z'
              about:
                type: string
                example: This is test about of mentee
              experience:
                type: string
                example: '4.2'
              gender:
                type: string
                example: MALE
              image:
                type: string
                example: https://cloudstorage.com/container/abc.png
      mentorProfile400Response:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Could not found mentor.
          error:
            type: array
            example: []
      shareMentorProfile200Response:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Profile share link generated successfully.
          result:
            type: object
            properties:
              shareLink:
                type: string
                example: 52f076629b3749ebf7dcab23f22b30df
          meta: {}
      shareMentorProfile400Response:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User doesn't exist.
          error:
            type: array
            example: []
    questions:
      createQuestionRequest:
        type: object
        required:
          - question
          - options
          - deleted
          - hint
          - value
        properties:
          question:
            type: string
            example: How would you rate the audio and video quality of the session
          options:
            type: array
            items:
              type: string
              example:
                - '1'
                - '2'
          deleted:
            type: boolean
            example: false
          value:
            type: string
            example: '1'
          hint:
            type: string
            example: ''
      createQuestionResponse201:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Question created successfully
          result:
            type: object
            properties:
              question:
                type: string
                example: How would you rate the audio and video quality of the session
              options:
                - '1'
                - '2'
              deleted:
                type: boolean
                example: false
              validators:
                type: object
                properties:
                  required:
                    type: boolean
                    example: false
              value:
                type: string
                example: '1'
              hint:
                type: string
                example: ''
              disable:
                type: boolean
                example: false
              visible:
                type: boolean
                example: true
              status:
                type: string
                example: published
              _id:
                type: string
                example: 6296e6892fdc1f037cbf4529
              updatedAt:
                type: string
                example: '2022-06-01T04:09:45.713Z'
              createdAt:
                type: string
                example: '2022-06-01T04:09:45.713Z'
              __v:
                type: number
                example: 0
          meta:
            type: object
            example: {}
      updateQuestionRequest:
        type: object
        properties:
          question:
            type: string
            example: How would you rate the audio and video quality of the session
          options:
            type: array
            items:
              type: string
              example:
                - '1'
                - '2'
                - '3'
          deleted:
            type: boolean
            example: false
          value:
            type: string
            example: '1'
          hint:
            type: string
            example: ''
      updateQuestionResponse202:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Question updated successfully
          result:
            type: array
            example: []
          meta:
            type: object
            example: {}
      updateQuestionResponse400:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Question not found
          error:
            type: array
            example: []
      readQuestionResponse200:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Question created successfully
          result:
            type: object
            properties:
              question:
                type: string
                example: How would you rate the audio and video quality of the session
              options:
                type: array
                items:
                  - type: string
                    example: '1'
                  - type: string
                    example: '2'
                  - type: string
                    example: '3'
              deleted:
                type: boolean
                example: false
              validators:
                type: object
                properties:
                  required:
                    type: boolean
                    example: false
              value:
                type: string
                example: '1'
              hint:
                type: string
                example: ''
              disable:
                type: boolean
                example: false
              visible:
                type: boolean
                example: true
              status:
                type: string
                example: published
              _id:
                type: string
                example: 6296e6892fdc1f037cbf4529
              updatedAt:
                type: string
                example: '2022-06-01T04:09:45.713Z'
              createdAt:
                type: string
                example: '2022-06-01T04:09:45.713Z'
              __v:
                type: number
                example: 0
          meta:
            type: object
            example: {}
      readQuestionResponse400:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Question not found
          error:
            type: array
            example: []
    questionset:
      createQuestionSetRequest:
        type: object
        required:
          - questions
          - code
        properties:
          questions:
            type: array
            items:
              - type: string
                example: 6296e6892fdc1f037cbf4529
              - type: string
                example: 6296e6892fdc1f037cbf4767
          code: feedback
      createQuestionSetResponse201:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Questions set created successfully
          result:
            type: object
            properties:
              questions:
                type: array
                items:
                  - type: string
                    example: 6296e6892fdc1f037cbf4529
                  - type: string
                    example: 6296e6892fdc1f037cbf4767
              code:
                type: string
                example: feedback
              deleted:
                type: boolean
                example: false
              status:
                type: string
                example: published
              _id:
                type: string
                example: 629978caf0cf0901d7d74d12
              updatedAt:
                type: string
                example: '2022-06-03T02:58:18.462Z'
              createdAt:
                type: string
                example: '2022-06-03T02:58:18.462Z'
              __v:
                type: number
                example: 0
          meta:
            type: object
            example: {}
      createQuestionSetResponse400:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Questions are already in use in the question set
          error:
            type: array
            example: []
      updateQuestionSetRequest:
        type: object
        properties:
          questions:
            type: array
            items:
              - type: string
                example: 6296e6892fdc1f037cbf4529
              - type: string
                example: 6296e6892fdc1f037cbf4767
              - type: string
                example: 6296e6522fdc1f037cbf4525
          code: feedback
      updateQuestionSetResponse202:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Questions set updated successfully
          result:
            type: array
            example: []
          meta:
            type: object
            example: {}
      updateQuestionSetResponse400:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Questions are already in use in the question set
          error:
            type: array
            example: []
      readQuestionSetResponse200:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Questions set fetched successfully
          result:
            type: object
            properties:
              questions:
                type: array
                items:
                  - type: string
                    example: 6296e6892fdc1f037cbf4529
                  - type: string
                    example: 6296e6892fdc1f037cbf4767
              code:
                type: string
                example: feedback
              deleted:
                type: boolean
                example: false
              status:
                type: string
                example: published
              _id:
                type: string
                example: 629978caf0cf0901d7d74d12
              updatedAt:
                type: string
                example: '2022-06-03T02:58:18.462Z'
              createdAt:
                type: string
                example: '2022-06-03T02:58:18.462Z'
              __v:
                type: number
                example: 0
          meta:
            type: object
            example: {}
      readQuestionSetResponse400:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Question not found
          error:
            type: array
            example: []
    feedback:
      getFeedbackFromResponse200:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: >-
              Thank you for hosting the session. Please rate us on the following
              to help us improve.
          result:
            type: object
            properties:
              form:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: 6296e6522fdc1f037cbf4525
                    options:
                      type: array
                      items:
                        - type: string
                          example: '1'
                        - type: string
                          example: '2'
                    deleted:
                      type: boolean
                      example: false
                    validators:
                      type: object
                      properties:
                        required:
                          type: boolean
                          example: false
                    value:
                      type: string
                      example: ''
                    hint:
                      type: string
                      example: ''
                    disable:
                      type: boolean
                      example: false
                    visible:
                      type: boolean
                      example: true
                    status:
                      type: string
                      example: published
                    updatedAt:
                      type: string
                      example: '2022-06-01T04:08:50.155Z'
                    createdAt:
                      type: string
                      example: '2022-06-01T04:08:50.155Z'
                    __v:
                      type: number
                      example: 1
                    questionsSetId:
                      type: string
                      example: 629978caf0cf0901d7d74d12
                    label:
                      type: string
                      example: >-
                        How would you rate the audio and video quality of the
                        session
          meta:
            type: object
            example: {}
      getFeedbackFormResponse400:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Session not found.
          error:
            type: array
            example: []
      submitFeedbackRequest:
        type: object
        required:
          - feedbacks
          - feedbackAs
        properties:
          feedbacks:
            type: array
            items:
              type: object
              required:
                - questionId
                - value
                - question
              properties:
                questionId:
                  type: string
                  example: 6296e65c2fdc1f037cbf4527
                value:
                  type: string
                  example: '1'
                question:
                  type: string
                  example: >-
                    How would you rate the audio and video quality of the
                    session
          feedbackAs:
            type: string
            example: mentee
      submitFeedbackResponse200:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Feedback submitted successfully.
          result:
            type: array
            example: []
          meta:
            type: object
            example: {}
      submitFeedbackResponse400:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Feedback form has already been submitted.
          error:
            type: array
            example: []
      submitFeedbackResponse422:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Feedback key failed for the mentor
          error:
            type: array
            example: []
    cloudServices:
      cloudServicesResponse200:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Signed URL Generated Successfully.
          result:
            type: object
            properties:
              signedUrl:
                type: string
                example: >-
                  https://aws-bucket-storage-name.s3.ap-south-1.amazonaws.com/users/62832531a05cbd57b273aebb-1654149589875-laptop1.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=aws-access-key-id%2F20220602%2Fap-south-1%2Fs3%2Faws4_request&X-Amz-Date=20220602T055949Z&X-Amz-Expires=1800&X-Amz-Signature=0588b16fba45cb85efdc45749173c42ba26b47a9faa9bce5715c666b2657a4d4&X-Amz-SignedHeaders=host
              filePath:
                type: string
                example: users/62832531a05cbd57b273aebb-1654149589875-laptop1.jpg
              destFilePath:
                type: string
                example: users/62832531a05cbd57b273aebb-1654149589875-laptop1.jpg
      cloudServicesDownloadResponse200:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Download URL Generated Successfully.
          result:
            type: string
            example: >-
              https://aws-bucket-storage-name.s3.ap-south-1.amazonaws.com/users/62832531a05cbd57b273aebb-1654149589875-image.jpg
    users:
      feedbackResponse200:
        type: object
        properties:
          responseCode:
            type: string
            example: OK,
          message:
            type: string
            example: Pending feedbacks fetched successfully.
          result:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                  example: 628ee0c8efb3923017c27f03
                title:
                  type: string
                  example: Leadership5
                description:
                  type: string
                  example: Training in leadership
                mentorFeedbackForm:
                  type: string
                  example: mentorQS2
                form:
                  type: object
                  example: {}
      userList200Response:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Mentor list fetched successfully.
          result:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      example: A
                    values:
                      type: array
                      items:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 62832531a05cbd57b273aebb
                          name:
                            type: string
                            example: jhon
                          areasOfExpertise:
                            type: array
                            items:
                              type: object
                              properties:
                                value:
                                  type: string
                                  example: 1
                                label:
                                  type: string
                                  example: Educational Leadership
                                _id:
                                  type: string
                                  example: 628d422029034b105806b906
                          image:
                            type: string
                            example: >-
                              https://aws-bucket-storage-name.s3.ap-south-1.amazonaws.com/https://cloudstorage.com/container/abc.png
              count:
                type: number
                example: 1
    email:
      emailSendRequest:
        description: Email Sent request
        type: object
        required:
          - type
          - email
        properties:
          type:
            type: string
            description: Type of channel such as Email
            example: email
            required: true
          email:
            type: object
            required:
              - to
              - subject
              - body
            properties:
              to:
                type: string
                description: >-
                  Email ID of the recipient. To specify multiple email IDs,
                  separate the IDs using `,`
                example: example@mail.com
                required: true
              cc:
                type: string
                description: >-
                  Email ID of the recipient. To specify multiple email IDs,
                  separate the IDs using `,`
                example: ccexample@mail.com
              subject:
                type: string
                description: Subject of the Email Message
                example: Email Notification
                required: true
              body:
                type: string
                description: >-
                  Body of the Email Message. To enhance the formatting of the
                  message, use HTML tags.
                example: |-
                  Dear John, 
                   Welcome to Notification
                required: true
      emailSendResponse200:
        description: Email Sent response
        type: object
        properties:
          message:
            type: string
            example: Email sent successfully.
          result:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: Email was sent successfully
      emailSendResponse400:
        description: Failed to send email
        type: object
        properties:
          message:
            type: string
            example: Unable to send the Email
          status:
            type: string
            example: failure
          statusCode:
            type: number
            example: 400
          error:
            type: array
            example: []
    issues:
      createRequest:
        type: object
        description: API for reporting an issue
        required:
          - description
        properties:
          description:
            type: string
            description: Description of the issue faced.
            example: Sample description of the issue faced
      createResponse:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Your issue was successfully reported.
      create422Response:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Validation failed, Entered data is incorrect!.
          error:
            type: array
            example: []
    config:
      $schema: http://json-schema.org/draft-04/schema#
      type: object
      properties:
        responseCode:
          type: string
        message:
          type: string
        result:
          type: object
          properties:
            meetingPlatform:
              type: string
            reportIssue:
              type: object
              properties:
                to:
                  type: string
                subject:
                  type: string
        meta:
          type: object
          properties:
            formsVersion:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                  type:
                    type: string
            correlation:
              type: string
  securitySchemes:
    bearer:
      type: apiKey
      name: X-auth-token
      in: header
tags:
  - name: Config APIs
    description: You can use this API to get config related to the service
    externalDocs:
      description: ''
      url: ''
