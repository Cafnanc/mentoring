---
openapi: 3.0.0
info:
  title: Elevate User
  version: 1.0.0
  termsOfService: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
  description: >-
    - The Users Service is a centralized Service to support other services. Apis perform operations related to mentoring entities notification etc 

    - The URL for Users API(s) is `{context}/user/v1`
    - <b>Note:</b> These resources can be used in other services
  contact:
    email: info@sunbird.org
servers:
  - url: http://localhost:3002
    description: local dev
  - url: https://dev.elevate-apis.shikshalokam.org
    description: dev server

paths:
  '/user/v1/account/create':
    post:
      summary: Create user
      tags:
        - User APIs
      description: "This Api is associated with Create User on mentoring \n - Then
        Endpoint for creating user `/user/v1/account/create` \n - It is mandatory to
        provide values for parameter marked with `required` \n - Mandatory parameter
        cannot be empty or null \n - secretCode is required only for mentor"
      requestBody:
        required: true
        description: Request body consist of metadata and accepts payload as JSON
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user/userCreateUserRequest'
      responses:
        '200':
          description: OK. User created.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/userCreateUserResponse'
        '400':
          description: Bad Request. Refrral code is invalid
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/userCreateUser400Response'
        '406':
          description: Not Acceptable. User already exists.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/userCreateUser406Exist'
  '/user/v1/account/login':
    post:
      summary: Login
      tags:
        - User APIs
      description: "This Api is associated with login user \n - Then
        Endpoint for login user `/user/v1/account/login` \n - It is mandatory to
        provide values for parameter marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/user/userLoginRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/userLoginResponse'
        '400':
          description: Bad Request. Invalid Email or Password
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/userLoginResponse400'
  '/user/v1/account/acceptTermsAndCondition':
    patch:
      summary: Terms & Condition
      tags:
        - Depreciated APIs
      description: This API Requires only X-auth-token and it will set an email to verify true.
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/acceptTermsAndConditionResponse'
        '400':
          description: Bad Request. User Does not exist.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/acceptTermsAndConditionResponse400'
  '/user/v1/account/generateToken':
    post:
      summary: Generates access token.
      tags:
        - User APIs
      description: "This API is associated with re-login and generating access token from refresh token \n - Then
        Endpoint for generating access token `/user/v1/account/generateToken` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/user/generateTokenRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/generateTokenResponse200'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/generateTokenResponse400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/generateTokenResponse401'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/generateTokenResponse500'
  '/user/v1/account/generateOtp':
    post:
      summary: Generate OTP
      tags:
        - User APIs
      description: "This API is associated with generating OTP  \n - Then
        Endpoint for generating OTP `user/v1/account/generateOtp` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/user/genrateOtpRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/generateOtpResponse200'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/generateOtpResponse400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/generateOtpResponse500'
  '/user/v1/account/resetPassword':
    post:
      summary: Reset password
      tags:
        - User APIs
      description: "This API is associated with reset password  \n - Then
        Endpoint for reset password `user/v1/account/resetPassword` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/user/resetPasswordRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/resetPasswordResponse200'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/resetPasswordResponse400'
        '401':
          description: Bad Request
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/resetPasswordResponse401'
  '/user/v1/account/logout':
    post:
      summary: Logout
      tags:
        - User APIs
      description: "This API is associated with logout  \n - Then
        Endpoint for logout `/user/v1/account/logout` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/user/logoutRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/logoutResponse200'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/logoutResponse400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/logoutResponse401'
  '/user/v1/account/list':
    get:
      summary: List user
      tags:
        - Users APIs
      description: "This API is associated with the listing of users based on condition  \n -
        Endpoint for list user `/user/v1/account/list` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: query
          name: userType
          description: Type of user
          required: true
          schema:
            type: string
          example: mentor
        - in: query
          name: page
          description: Please add page number
          required: false
          schema:
            type: number
          example: 1
        - in: query
          name: limit
          description: number of record to limit
          required: false
          schema:
            type: number
          example: 2
        - in: query
          name: search
          description: Please search for name or title of user etc.
          required: false
          schema:
            type: string
          example: john
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/user/userList200Response'
  '/user/v1/user/read/{userId}':
    get:
      summary: User details
      tags:
        - Users APIs
      description: "This API is associated with the user's profile details  \n - Then
        Endpoint for user profile details `/user/v1/user/read/` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'userId'
          required: true
          description: Please append a valid User Id To the Request URL
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/profile/profileDetailsResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/profile/Unauthorized401Response'
  '/user/v1/user/update':
    patch:
      summary: Update user
      tags:
        - Users APIs
      description: "This API is associated with update user profile  \n - Then
        Endpoint for update user profile `/user/v1/user/update` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/profile/updateRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/profile/updateRequest200Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/profile/Unauthorized401Response'
  '/user/v1/user/share/{userId}':
    get:
      summary: Share mentor profile
      tags:
        - Users APIs
      description: "This API is associated with Sharing mentor profile  \n - The
        Endpoint for user profile details `/user/v1/user/share/` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'userId'
          required: true
          description: Please append a valid User Id To the Request URL
          schema:
            type: string
          example: 1
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/profile/shareMentorProfile200Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/profile/shareMentorProfileBadRequest400Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/profile/Unauthorized401Response'
  '/user/v1/cloud-services/file/getSignedUrl?fileName={file_name}':
    get:
      summary: Cloud services get signed url
      tags:
        - Cloud services APIs
      description: "This API is associated with the cloud services for getting signed URL  \n - Then
        Endpoint for cloud services `/user/v1/cloud-services/file/getSignedUrl` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'file_name'
          required: true
          description: Please append a valid file name to url which has to be uploaded
          schema:
            type: string
          example: image.jpg
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/cloudServices/cloudServicesResponse200'
  '/user/v1/cloud-services/file/getDownloadableUrl?file_path={file_path}':
    get:
      summary: Cloud services get download url
      tags:
        - Cloud services APIs
      description: "This API is associated with the cloud services for getting downloadable URL  \n - Then
        Endpoint for cloud services `/user/v1/cloud-services/file/getDownloadableUrl` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'file_path'
          required: true
          description: Please append a valid file path to url which has to be downloaded
          schema:
            type: string
          example: users/62832531a05cbd57b273aebb-1654149589875-image.jpg
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/cloudServices/cloudServicesDownloadResponse200'
  '/user/v1/form/create':
    post:
      summary: Create form
      tags:
        - Form APIs
      description: "This API is associated with create form  \n - Then
        Endpoint for create form `/user/v1/form/create` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/form/createFormRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/form/createForm200Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/form/createForm400Response'
  '/user/v1/form/update/{formId}':
    patch:
      summary: Update form
      tags:
        - Form APIs
      description: "This API is associated with update form  \n - Then
        Endpoint for update form `/user/v1/form/update/{formId}` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'formId'
          required: true
          description: Please append a valid form Id to the Request URL.
          schema:
            type: string
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/form/updateFormRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/form/updateForm200Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/form/updateForm400Response'
  '/user/v1/form/read/{formId}':
    post:
      summary: Get form details
      tags:
        - Form APIs
      description: "This API is associated with update form  \n - Then
        Endpoint for update form `/user/v1/form/update/{formId}` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'formId'
          required: true
          description: Please append a valid form Id to the Request URL.
          schema:
            type: string
          example: 62832531a05cbd57b273aebb
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/form/readFormRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/form/readForm200Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/form/readForm400Response'
  '/user/v1/admin/create':
    post:
      summary: Create admin user
      tags:
        - Admin APIs
      description: "API associated with creating new admin user  \n - Then
        Endpoint for create system user `/user/v1/admin/create` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/admin/createSystemUserRequest'
      responses:
        '201':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/admin/createSystemUser201Response'
        '406':
          description: Bad Request. System User alrady exist
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/admin/createSystemUser406Response'
  '/user/v1/admin/login':
    post:
      summary: Login admin user
      tags:
        - Admin APIs
      description: "This API is associated with login system user  \n - Then
        Endpoint for login system user `/user/v1/systemUsers/login` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/admin/loginSystemUserRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/admin/loginSystemUser200Response'
        '400':
          description: Bad Request. System User doesn't exist
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/admin/loginSystemUser400Response'
  '/user/v1/admin/deleteUser/{id}':
    patch:
      summary: Delete user
      tags:
        - Admin APIs
      description: "This API is associated with delete user  \n - Then
        Endpoint for delete user `/user/v1/admin/deleteUser` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'id'
          required: true
          description: Please append a valid user id to the request url
          schema:
            type: string
          example: 1
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/admin/deleteUser202Response'
        '400':
          description: Bad Request. User Entity Already Deleted
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/admin/deleteUser400Response'
  /user/admin/addOrgAdmin:
    post:
      summary: Add Organization Admin
      description: "This API is used to assign a user as the Org-Admin  \n - Then
        Endpoint for delete user `/user/v1/admin/addOrgAdmin` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      tags:
        - Admin APIs
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 12
                org_id:
                  type: integer
                  example: 55
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  responseCode:
                    type: string
                    example: 'OK'
                  message:
                    type: string
                    example: 'User Assigned As The Org-Admin Successfully'
                  result:
                    type: object
                    properties:
                      user_id:
                        type: integer
                        example: 12
                      org_id:
                        type: integer
                        example: 55
                      user_roles:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 2
                            title:
                              type: string
                              example: 'mentor'
                            user_type:
                              type: integer
                              example: 1
                            status:
                              type: string
                              example: 'ACTIVE'
                          example:
                            - id: 2
                              title: 'mentor'
                              user_type: 0
                              status: 'ACTIVE'
                            - id: 3
                              title: 'org_admin'
                              user_type: 0
                              status: 'ACTIVE'
  '/user/v1/organization/create':
    post:
      summary: Create Organization
      tags:
        - Organization
      description: "This API is associated with organization  \n - The
        Endpoint for create organization `/user/v1/organization/create` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      operationId: createOrganization
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/organization/createOrganizationRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/organization/createOrganization200Response'
        '400':
          description: Bad Request. System User doesn't exist
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/organization/createOrganization400Response'
  '/user/v1/organization/update/{id}':
    post:
      summary: Update Organization
      tags:
        - Organization
      description: "This API is associated with organization  \n - The
        Endpoint for update organization `/user/v1/organization/update` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      operationId: createOrganization
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: Please append a valid user id to the request url
          schema:
            type: integer
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/organization/createOrganizationRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/organization/updateOrganization200Response'
        '400':
          description: Bad Request. System User doesn't exist
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/organization/updateOrganization400Response'
  '/user/v1/organization/list?page={page}&limit={limit}&search={search}':
    get:
      summary: List Organization
      tags:
        - Organization
      description: "This API is associated with the listing of organization based on condition  \n -
        Endpoint for list organization `/user/v1/organization/list` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: page
          description: Please add page number
          required: false
          schema:
            type: number
          example: 1
        - in: path
          name: limit
          description: number of record to limit
          required: false
          schema:
            type: number
          example: 2
        - in: path
          name: search
          description: Please search for name or title of user etc.
          required: false
          schema:
            type: string
          example: jhon
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/organization/organizationList200Response'
  /user/v1/organization/requestOrgRole:
    post:
      summary: Request Org Role
      description: Request a specific role within an organization.
      tags:
        - Organization
      parameters:
        - name: X-auth-token
          in: header
          description: User's access token which already recognizes the user as the organization's mentee.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  example: mentor
                form_data:
                  type: object
                  properties:
                    org_specific_fields:
                      type: string
                      example: answer
      responses:
        '200':
          description: Successful request for organization role.
          content:
            application/json:
              example:
                responseCode: OK
                message: Mentor role requested successfully
                result:
                  request_id: 12
                  org_id: 10
                  status: REQUESTED
                  meta: {}
  /user/v1/organization/getOrgRoleRequests:
    get:
      summary: Get User Org Role Requests
      description: Get a list of organization role requests for a specific role. This api is used by the user to get the request for role change
      tags:
        - Organization
      parameters:
        - name: X-auth-token
          in: header
          description: Access token of the user who is already a mentee of the organization.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination.
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of items per page.
          required: true
          schema:
            type: integer
        - name: role
          in: query
          description: The specific role for which requests are being fetched.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetched organization role requests.
          content:
            application/json:
              example:
                responseCode: OK
                message: Org Role Requests Fetched Successfully
                result:
                  data:
                    - id: 12
                      requester_id: 23
                      role: mentor
                      status: under_review
                      org_id: 43
                      handled_by: 22
                  count: 1
  '/user/v1/userRole/list':
    get:
      summary: UserRole List
      tags:
        - UserRole APIs
      description: "This API is associated with the user's role details  \n - Then
        Endpoint for user profile details `/user/v1/userRole/list` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/userRole/userRoleListResponse200'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/profile/Unauthorized401Response'
  '/user/v1/entity-type/update/{id}':
    post:
      summary: Update entity type
      tags:
        - EntityType APIs
      description: "This API is associated with entity type updation  \n - Then
        Endpoint for create entity `/user/v1/entity-type/update` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: Please append a valid user id to the request url
          schema:
            type: integer
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/entity-type/createEntityTypeRequest'
      responses:
        '201':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entity-type/updateEntityType201Response'
        400:
          description: Bad Request. Entity type alrady exist
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/entity-type/updateEntityType400Response'
  '/user/v1/entity-type/read':
    post:
      summary: Read entity type
      tags:
        - EntityType APIs
      description: "This API is associated with entity type list  \n - Then
        Endpoint for create entity `/user/v1/entity-type/read` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entity-type/readEntityType201Response'
        400:
          description: Bad Request. Entity type alrady exist
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/entity-type/updateEntityType400Response'
  '/user/v1/entity-type/delete/{id}':
    patch:
      summary: Delete entity type
      tags:
        - EntityType APIs
      description: "This API is associated with delete entity  \n - Then
        Endpoint for delete user entity `/user/v1/entity-type/delete` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'id'
          required: true
          description: Please append a valid user entity id to the request url
          schema:
            type: integer
          example: 31
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/entity-type/deleteUserEntity202Response'
        '400':
          description: Bad Request. User Entity Already Deleted
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/entity-type/deleteUserEntity400Response'
  '/user/v1/entity/create':
    post:
      summary: Create entity
      tags:
        - Entity APIs
      description: "This API is associated with entity creation  \n - Then
        Endpoint for create entity `/user/v1/entity/create` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/userentity/createUserEntityRequest'
      responses:
        '201':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userentity/createUserEntity201Response'
        400:
          description: Bad Request. User Entity alrady exist
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/userentity/createUserEntity400Response'
  '/user/v1/entity/update/{id}':
    patch:
      summary: Update entity
      tags:
        - Entity APIs
      description: "This API is associated with update entity  \n - Then
        Endpoint for update entity `/user/v1/entity/update` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'id'
          required: true
          description: Please append a valid user entity id to the request url
          schema:
            type: integer
          example: 2
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/userentity/updateUserEntityRequest'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/userentity/updateUserEntity202Response'
        '400':
          description: Bad Request. User Entity Not Found
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/userentity/updateUserEntity400Response'
  '/user/v1/entity/read?id={id}':
    get:
      summary: Read user entity
      tags:
        - Entity APIs
      description: "This API is associated with getting user entity based on id or value  \n - Then
        Endpoint for getting user entity `/user/v1/entity/read` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          description: Please append a valid id
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/userentity/readUserEntity200Response'
  '/user/v1/entity/delete/{id}':
    patch:
      summary: Delete entity
      tags:
        - Entity APIs
      description: "This API is associated with delete entity  \n - Then
        Endpoint for delete user entity `/user/v1/entity/delete` \n - It is mandatory to
        provide values for parameters marked with `required` \n - Mandatory parameter
        cannot be empty or null"
      parameters:
        - name: X-auth-token
          in: header
          description: To make use of the API, you require X-auth-token. This is Available
            in login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: 'id'
          required: true
          description: Please append a valid user entity id to the request url
          schema:
            type: integer
          example: 31
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/userentity/deleteUserEntity202Response'
        '400':
          description: Bad Request. User Entity Already Deleted
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/userentity/deleteUserEntity400Response'
  /user/v1/org-admin/getRequests:
    post:
      summary: Get Requests
      description: Get a list of organization requests based on specified filters.
      tags:
        - Org Admin APIs
      parameters:
        - name: X-auth-token
          in: header
          description: Access token of the org admin.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination.
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of items per page.
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: object
                  properties:
                    role:
                      type: array
                      items:
                        type: string
                        example: mentor
                    status:
                      type: array
                      items:
                        type: string
                        example: requested
                    handled_by:
                      type: array
                      items:
                        type: integer
                        example: 2
      responses:
        '200':
          description: Successfully fetched organization requests.
          content:
            application/json:
              example:
                responseCode: OK
                message: Organization requests fetched successfully
                result:
                  data:
                    - id: 12
                      requester_id: 23
                      role: mentor
                      status: under_review
                      org_id: 43
                      handled_by: 22
                      requester:
                        id: 23
                        name: Jake
                        email: jake@gmail.com
                    - id: 13
                      requester_id: 22
                      role: mentor
                      status: approved
                      org_id: 43
                      handled_by: 22
                      requester:
                        id: 23
                        name: Jake
                        email: jake@gmail.com
                  count: 12
  /user/v1/org-admin/updateRequestStatus:
    post:
      summary: Update Request Status
      description: Update the status of an organization request.
      tags:
        - Org Admin APIs
      parameters:
        - name: X-auth-token
          in: header
          description: Access token of the org admin.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request_id:
                  type: integer
                  example: 12
                comments:
                  type: array
                  items:
                    type: string
                    example: All uploaded documents verified
                status:
                  type: string
                  enum: [APPROVED, REJECTED, UNDER_REVIEW]
                  example: APPROVED
      responses:
        '200':
          description: Successfully updated organization request status.
          content:
            application/json:
              example:
                responseCode: OK
                message: Successfully updated organization request status
                result:
                  id: 12
                  requester_id: 23
                  status: approved
                  org_id: 43
                  handled_by: 22
                  requester:
                    id: 23
                    name: Jake
  /user/v1/org-admin/getRequestDetails:
    get:
      summary: Get Request Details
      description: Get details of a specific organization request.
      tags:
        - Org Admin APIs
      parameters:
        - name: X-auth-token
          in: header
          description: Access token of the org admin.
          required: true
          schema:
            type: string
        - name: request_id
          in: query
          description: ID of the request to get details for.
          required: true
          schema:
            type: integer
            example: 12
      responses:
        '200':
          description: Successfully fetched organization request details.
          content:
            application/json:
              example:
                responseCode: OK
                message: Organisation request details fetched successfully
                result:
                  id: 12
                  requester_id: 23
                  role: mentor
                  status: approved
                  org_id: 43
                  handled_by: 22
                  requester:
                    id: 23
                    name: Jake
                  handler:
                    id: 24
                    name: org_admin name
                  comments:
                    - Temp 1
                    - Temp 2
                  meta: {}
  /user/v1/org-admin/bulkUserCreate:
    post:
      summary: Bulk User Create
      description: Create multiple users in bulk using a CSV file.
      tags:
        - Org Admin APIs
      parameters:
        - name: X-auth-token
          in: header
          description: Access token of the org admin.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_path:
                  type: string
                  example: path/to/uploaded-csv-file
      responses:
        '200':
          description: Successfully uploaded bulk user invites CSV.
          content:
            application/json:
              example:
                responseCode: OK
                message: Bulk User Invites CSV Uploaded Successfully
                result:
                  id: 20
                  input_path: <file_path>
                  status: UPLOADED
                  created_by: 22
                  type: text/csv
                  updated_at: '2023-09-20T12:00:46.533Z'
                  created_at: '2023-09-20T12:00:46.533Z'
  /user/v1/org-admin/getBulkInvitesFilesList:
    get:
      summary: Get Bulk Invite Files List
      description: Get a list of uploaded bulk invite CSV files.
      tags:
        - Org Admin APIs
      parameters:
        - name: X-auth-token
          in: header
          description: Access token of the org admin.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination.
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of items per page.
          required: true
          schema:
            type: integer
        - name: status
          in: query
          description: Status of the bulk invite files (uploaded/processed/failed).
          required: true
          schema:
            type: string
            enum: [uploaded, processed, failed]
            example: uploaded
      responses:
        '200':
          description: Successfully fetched bulk invite CSV list.
          content:
            application/json:
              example:
                responseCode: OK
                message: Bulk Invites CSV List Fetched Successfully
                result:
                  data:
                    - id: 12
                      name: filename.csv
                      input_path: <path/to/uploaded-csv>
                      status: UPLOADED
                      created_by: 4
                      type: text/csv
                      output_path: <path/to/output-csv>
                    - id: 13
                      name: filename2.csv
                      input_path: <path/to/uploaded-csv>
                      status: UPLOADED
                      created_by: 4
                      type: text/csv
                      output_path: <path/to/output-csv>
                  count: 2
components:
  schemas:
    user:
      userCreateUserRequest:
        description: User program and solution request
        type: object
        required:
          - name
          - email
          - password
          - role
        properties:
          name:
            type: string
            description: Name of the user
            example: John Deo
            required: true
          email:
            type: string
            description: Email Id of user
            example: example@mail.com
            required: true
          password:
            type: string
            description: Password of user
            format: password
            example: Password
            required: true
          otp:
            type: string
            description: Email OTP for verification
            example: 6845975
            required: true
          has_accepted_terms_and_conditions:
            type: boolean
            description: Flag specifiying if user has accepted the terms & conditions
            example: true
            required: true
      userCreateUserResponse:
        description: User creation response
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Sign-up successful Please wait while logging in.
          result:
            type: object
            properties:
              access_token:
                type: string
                example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
              refresh_token:
                type: string
                example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
              user:
                type: object
                properties:
                  id:
                    type: number
                    example: 8
                  email:
                    type: string
                    example: example@mail.com
                  email_verified:
                    type: string
                    example: 'true'
                  name:
                    type: string
                    example: John Deo
                  status:
                    type: string
                    example: ACTIVE
                  has_accepted_terms_and_conditions:
                    type: boolean
                    example: true
                  preferred_language:
                    type: object
                    properties:
                      value:
                        type: string
                        example: english
                      label:
                        type: string
                        example: English
                  organization_id:
                    type: number
                    example: 1
                  roles:
                    type: array
                    items:
                      type: number
                    example:
                      - 2
                  created_at:
                    type: string
                    example: '2023-09-20T11:59:37.871Z'
                  updated_at:
                    type: string
                    example: '2023-09-20T11:59:37.871Z'
                  user_roles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 1
                        title:
                          type: string
                          example: mentee
                        user_type:
                          type: number
                          example: 0
                        status:
                          type: string
                          example: ACTIVE
      userCreateUser406Exist:
        description: User solutions response
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User already exists.
          error:
            type: array
            items:
              type: string
            example: []
      userCreateUser400Response:
        description: Reffral Code is Invalid
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Incorrect code. Please try again.
          error:
            type: array
            items:
              type: string
            example: []
      userLoginRequest:
        type: object
        description: API for login
        required:
          - email
          - password
        properties:
          email:
            type: string
            description: Email Id of user
            example: example@mail.com
          password:
            type: string
            description: Password of user
            example: Password
      userLoginResponse:
        type: object
        description: User login response
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: User logged in successfully.
          result:
            type: object
            properties:
              access_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImlkIjo3LCJlbWFpbCI6ImhpbGJlcnQyOUB5YWhvby5jb20iLCJuYW1lIjoiQWRlbGlhIiwicm9sZXMiOlt7ImlkIjoyLCJ0aXRsZSI6Im1lbnRvciIsInVzZXJfdHlwZSI6MCwic3RhdHVzIjoiYWN0aXZlIn1dfSwiaWF0IjoxNjkwMjg2Nzg2LCJleHAiOjE2OTAzNzMxODZ9.0_Yi8yEu_G04VNJvVvafWMvO-Eb9TVsoCnp_pfrFVi8
              refresh_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImlkIjo3LCJlbWFpbCI6ImhpbGJlcnQyOUB5YWhvby5jb20iLCJuYW1lIjoiQWRlbGlhIiwicm9sZXMiOlt7ImlkIjoyLCJ0aXRsZSI6Im1lbnRvciIsInVzZXJfdHlwZSI6MCwic3RhdHVzIjoiYWN0aXZlIn1dfSwiaWF0IjoxNjkwMjg2Nzg2LCJleHAiOjE3MDYwOTc5ODZ9.quHyyjz4DEc7rvKpxwzaiRyRKFkqrbTb8tNB5zX0eF0
              user:
                type: object
                properties:
                  id:
                    type: number
                    example: 7
                  email:
                    type: string
                    example: hilbert29@yahoo.com
                  email_verified:
                    type: string
                    example: true
                  name:
                    type: string
                    example: Adelia
                  gender:
                    type: object
                    properties:
                      value:
                        type: string
                        example: male
                      label:
                        type: string
                        example: Male
                  location:
                    type: array
                    items:
                      type: string
                    example: []
                  about:
                    type: string
                    example: null
                  share_link:
                    type: string
                    example: null
                  status:
                    type: string
                    example: ACTIVE
                  last_logged_in_at:
                    type: string
                    format: date-time
                    example: 2023-07-25T11:50:35.044Z
                  has_accepted_terms_and_conditions:
                    type: boolean
                    example: true
                  languages:
                    type: string
                    example: null
                  preferred_language:
                    type: object
                    properties:
                      value:
                        type: string
                        example: english
                      label:
                        type: string
                        example: English
                  organization_id:
                    type: number
                    example: 1
                  roles:
                    type: array
                    items:
                      type: number
                    example: [2]
                  image:
                    type: string
                    example: https://cloudstorage.com/container/abc.png
                  deleted_at:
                    type: string
                    example: null
                  created_at:
                    type: string
                    example: 2023-07-24T14:37:56.393Z
                  updated_at:
                    type: string
                    example: 2023-07-25T11:50:35.044Z
                  user_roles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 1
                        title:
                          type: string
                          example: mentee
                        user_type:
                          type: integer
                          example: 0
                        status:
                          type: string
                          example: ACTIVE
      userLoginResponse400:
        description: Username or password is invalid.
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Please enter the correct login ID and Password.
          error:
            type: array
            items:
              type: string
            example: []
      acceptTermsAndConditionResponse:
        description: OK, User Accepted Terms.
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: User successfully updated.
          result:
            type: array
            items:
              type: string
            example: []
      acceptTermsAndConditionResponse400:
        description: OK, User Does not exist
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User doesn't exist.
          error:
            type: array
            items:
              type: string
            example: []
      generateTokenRequest:
        type: object
        description: API for generate access token
        required:
          - refreshToken
        properties:
          refresh_token:
            type: string
            description: Refresh token.
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjYyODMyNTMxYTA1Y2JkNTdiMjczYWViYiIsImVtYWlsIjoiYW5raXQuc0BwYWNld2lzZG9tLmNvbSIsIm5hbWUiOiJBbmtpdCIsImlzQU1lbnRvciI6dHJ1ZX0sImlhdCI6MTY1MzAxMDYxNCwiZXhwIjoxNjY4ODIxODE0fQ.hrIiKz3envHDPauVXSmA_BO_KKzWJAePsP3xD8l851s
      generateTokenResponse200:
        description: OK, Access token has been genrated again.
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Access token generated successfully
          result:
            type: object
            properties:
              access_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjYyODMyNTMxYTA1Y2JkNTdiMjczYWViYiIsImVtYWlsIjoiYW5raXQuc0BwYWNld2lzZG9tLmNvbSIsIm5hbWUiOiJBbmtpdCIsImlzQU1lbnRvciI6dHJ1ZX0sImlhdCI6MTY1MzAxMDk4NCwiZXhwIjoxNjUzMDk3Mzg0fQ.BOZ_d6xNxuAJZ1ubdj94mCeO4jwXsC7t9JT4KXECVN
      generateTokenResponse400:
        description: Bad Request
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User doesn't exist.
          error:
            type: array
            items:
              type: string
            example: []
      generateTokenResponse401:
        description: Unauthorized
        type: object
        properties:
          responseCode:
            type: string
            example: SERVER_ERROR
          message:
            type: string
            example: Refresh token expired
          error:
            type: array
            items:
              type: string
            example: []
      generateTokenResponse500:
        description: Internal Server Error
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Refresh token not found
          error:
            type: array
            items:
              type: string
            example: []
      genrateOtpRequest:
        type: object
        description: API for genarting OTP
        required:
          - email
          - password
        properties:
          email:
            type: string
            description: Email Id of user
            example: example@mail.com
          password:
            type: string
            description: Password of user
            example: Password
      generateOtpResponse200:
        description: OK, otp genrated successfully
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: OTP has been sent to your registered email ID. Please enter the number to update your password.
          result:
            type: array
            items:
              type: string
            example: []
      generateOtpResponse400:
        description: Internal Server Error
        type: object
        properties:
          responseCode:
            type: string
            example: SERVER_ERROR
          message:
            type: string
            example: Unable to send otp, may be redis server is down.
          error:
            type: array
            items:
              type: string
            example: []
      generateOtpResponse500:
        description: OTP Response
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User doesn't exist.
          error:
            type: array
            items:
              type: string
            example: []
      resetPasswordRequest:
        type: object
        description: API for reset password
        required:
          - email
          - password
          - otp
        properties:
          email:
            type: string
            description: Email Id of user
            example: example@mail.com
          password:
            type: string
            description: New password of user
            example: New password
          otp:
            type: number
            description: OTP sent on mail
            example: 123456
      resetPasswordResponse200:
        type: object
        description: Reset Password response
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Password reset successfully.
          result:
            type: object
            properties:
              access_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImlkIjo5LCJlbWFpbCI6ImJyYW5keW4udGVycnlAeWFob28uY29tIiwibmFtZSI6IkFzaGx5Iiwicm9sZXMiOlt7ImlkIjoyLCJ0aXRsZSI6Im1lbnRvciIsInVzZXJfdHlwZSI6MCwic3RhdHVzIjoiYWN0aXZlIn1dfSwiaWF0IjoxNjkwMjg1NzE4LCJleHAiOjE2OTAzNzIxMTh9.WmhUXIocykrBVti7vtznx_BMAaBtuqYUks4sc1J94Do
              refresh_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImlkIjo5LCJlbWFpbCI6ImJyYW5keW4udGVycnlAeWFob28uY29tIiwibmFtZSI6IkFzaGx5Iiwicm9sZXMiOlt7ImlkIjoyLCJ0aXRsZSI6Im1lbnRvciIsInVzZXJfdHlwZSI6MCwic3RhdHVzIjoiYWN0aXZlIn1dfSwiaWF0IjoxNjkwMjg1NzE4LCJleHAiOjE3MDYwOTY5MTh9.eqJ-KD0YA-Cdpz3XHWKgmi66uU6o229K9pyp6BwAAzI
              user:
                type: object
                properties:
                  id:
                    type: number
                    example: 9
                  email:
                    type: string
                    example: brandyn.terry@yahoo.com
                  email_verified:
                    type: string
                    example: true
                  name:
                    type: string
                    example: Ashly
                  gender:
                    type: object
                    properties:
                      value:
                        type: string
                        example: male
                      label:
                        type: string
                        example: Male
                  about:
                    type: string
                    example: null
                  share_link:
                    type: string
                    example: null
                  status:
                    type: string
                    example: ACTIVE
                  image:
                    type: string
                    example: null
                  last_logged_in_at:
                    type: string
                    format: nullable
                  has_accepted_terms_and_conditions:
                    type: boolean
                    example: true
                  languages:
                    type: array
                    items:
                      type: string
                    example: []
                  preferred_language:
                    type: object
                    properties:
                      value:
                        type: string
                        example: english
                      label:
                        type: string
                        example: English
                  organization_id:
                    type: number
                    example: 1
                  roles:
                    type: array
                    items:
                      type: number
                      example: 2
                  deleted_at:
                    type: string
                    example: null
                  created_at:
                    type: string
                    example: 2023-07-25T11:48:38.270Z
                  updated_at:
                    type: string
                    example: 2023-07-25T11:48:38.270Z
                  user_roles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 2
                        title:
                          type: string
                          example: mentor
                        user_type:
                          type: number
                          example: 0
                        status:
                          type: string
                          example: ACTIVE
      resetPasswordResponse400:
        description: Bad Request
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Please enter a new password, that has not been used before
          error:
            type: array
            items:
              type: string
            example: []
      resetPasswordResponse401:
        description: Bad Request
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Please enter the correct OTP.
          error:
            type: array
            items:
              type: string
            example: []
      logoutRequest:
        type: object
        description: API for logout
        required:
          - refreshToken
        properties:
          refresh_token:
            type: string
            description: Refresh token.
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjYyODMyNTMxYTA1Y2JkNTdiMjczYWViYiIsImVtYWlsIjoiYW5raXQuc0BwYWNld2lzZG9tLmNvbSIsIm5hbWUiOiJBbmtpdCIsImlzQU1lbnRvciI6dHJ1ZX0sImlhdCI6MTY1MzAxMDYxNCwiZXhwIjoxNjY4ODIxODE0fQ.hrIiKz3envHDPauVXSmA_BO_KKzWJAePsP3xD8l851s
      logoutResponse200:
        description: OK, User logout successfully
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: User logged out successfully.
          result:
            type: array
            items:
              type: string
            example: []
      logoutResponse400:
        description: Bad Request
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User doesn't exist.
          error:
            type: array
            items:
              type: string
            example: []
      logoutResponse401:
        description: Unauthorized
        type: object
        properties:
          responseCode:
            type: string
            example: UNAUTHORIZED
          message:
            type: string
            example: Invalid refresh token
          error:
            type: array
            items:
              type: string
            example: []
      userList200Response:
        description: User list
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Mentor list fetched successfully.
          result:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      example: A
                    values:
                      type: array
                      items:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 1
                          name:
                            type: string
                            example: jhon
                          image:
                            type: string
                            example: 'https://aws-bucket-storage-name.s3.ap-south-1.amazonaws.com/https://cloudstorage.com/container/abc.png'
              count:
                type: number
                example: 1

    profile:
      profileDetailsResponse200:
        type: object
        description: User solutions response
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Profile fetched successfully.
          result:
            type: object
            properties:
              email:
                type: string
                example: example@mail.com
              role:
                type: string
                example: mentee
              email_verified:
                type: boolean
                example: true
              has_accepted_terms_and_conditions:
                type: boolean
                example: false
              id:
                type: string
                example: 1
              name:
                type: string
                example: Ankit
              location:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: string
                      example: kl
                    label:
                      type: string
                      example: Kerala
              languages:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: string
                      example: english
                    label:
                      type: string
                      example: English
              organization_id:
                type: number
                example: 2
              preferred_language:
                type: object
                properties:
                  value:
                    type: string
                    example: english
                  label:
                    type: string
                    example: English
              status:
                type: string
                example: ACTIVE
              share_link:
                type: string
                example: null
              updated_at:
                type: string
                example: '2022-05-18T05:24:52.431Z'
              created_at:
                type: string
                example: '2022-05-18T05:24:52.431Z'
              last_logged_in_at:
                type: string
                example: '2022-05-18T05:24:52.431Z'
              about:
                type: string
                example: This is test about of mentee
              gender:
                type: object
                properties:
                  value:
                    type: string
                    example: male
                  label:
                    type: string
                    example: Male
              image:
                type: string
                example: https://cloudstorage.com/container/abc.png
      Unauthorized401Response:
        description: UNAUTHORIZED
        type: object
        properties:
          responseCode:
            type: string
            example: UNAUTHORIZED
          message:
            type: string
            example: Access token expired
          error:
            type: array
            items:
              type: string
            example: []
      updateRequest:
        type: object
        description: User solutions response
        properties:
          name:
            type: string
            example: Jhon
          location:
            type: array
            items:
              type: string
            example: [ap]
          about:
            type: string
            example: This is test about of mentee
          has_accepted_terms_and_conditions:
            type: boolean
            example: true
          gender:
            type: string
            example: male
          image:
            type: string
            example: https://cloudstorage.com/container/abc.png
      updateRequest200Response:
        description: Accepted
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Profile updated successfully.
          result:
            type: object
            properties:
              access_token:
                type: string
                example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
              refresh_token:
                type: string
                example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
              user:
                type: object
                properties:
                  id:
                    type: number
                    example: 8
                  email:
                    type: string
                    example: example@mail.com
                  email_verified:
                    type: string
                    example: 'true'
                  name:
                    type: string
                    example: John Deo
                  status:
                    type: string
                    example: ACTIVE
                  has_accepted_terms_and_conditions:
                    type: boolean
                    example: true
                  preferred_language:
                    type: object
                    properties:
                      value:
                        type: string
                        example: english
                      label:
                        type: string
                        example: English
                  organization_id:
                    type: number
                    example: 1
                  roles:
                    type: array
                    items:
                      type: number
                    example:
                      - 2
                  created_at:
                    type: string
                    example: '2023-09-20T11:59:37.871Z'
                  updated_at:
                    type: string
                    example: '2023-09-20T11:59:37.871Z'
                  user_roles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 1
                        title:
                          type: string
                          example: mentee
                        user_type:
                          type: number
                          example: 0
                        status:
                          type: string
                          example: ACTIVE
      shareMentorProfile200Response:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Profile share link generated successfully.
          result:
            type: object
            properties:
              share_link:
                type: string
                example: 52f076629b3749ebf7dcab23f22b30df
      shareMentorProfileBadRequest400Response:
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User doesn't exist.
          error:
            type: array
            items:
              type: string
            example: []

    form:
      createFormRequest:
        type: object
        required:
          - type
          - sub_type
          - data
        properties:
          type:
            type: string
            example: profile
          sub_type:
            type: string
            example: profileForm
          data:
            type: object
            properties:
              template_name:
                type: string
                example: defaultTemplate
              fields:
                type: object
                properties:
                  controls:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: name
                        label:
                          type: string
                          example: name
                        value:
                          type: string
                          example: ''
                        class:
                          type: string
                          example: ion-margin
                        type:
                          type: string
                          example: text
                        position:
                          type: string
                          example: floating
                        validators:
                          type: object
                          properties:
                            required:
                              type: boolean
                              example: true
                            minLength:
                              type: number
                              example: 10
      createForm200Response:
        description: Created
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Form created successfully
          result:
            type: array
            items:
              type: string
            example: []
      createForm400Response:
        description: Bad Request. Form Already Exist
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Form already exists
          error:
            type: array
            items:
              type: string
            example: []
      updateFormRequest:
        type: object
        required:
          - type
          - sub_type
          - data
        properties:
          type:
            type: string
            example: profile
          sub_type:
            type: string
            example: profileForm
          data:
            type: object
            properties:
              template_name:
                type: string
                example: defaultTemplate
              fields:
                type: object
                properties:
                  controls:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: name
                        label:
                          type: string
                          example: name
                        value:
                          type: string
                          example: ''
                        class:
                          type: string
                          example: ion-margin
                        type:
                          type: string
                          example: text
                        position:
                          type: string
                          example: floating
                        validators:
                          type: object
                          properties:
                            required:
                              type: boolean
                              example: true
                            minLength:
                              type: number
                              example: 10
      updateForm200Response:
        description: Updated
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Form updated successfully
          result:
            type: array
            items:
              type: string
            example: []
      updateForm400Response:
        description: Bad Request. Form Already Exist
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Form already exists
          error:
            type: array
            items:
              type: string
            example: []
      readFormRequest:
        type: object
        properties:
          type:
            type: string
            example: profile
          sub_type:
            type: string
            example: profileForm
      readForm200Response:
        description: Read
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Form fetched successfully
          result:
            type: object
            properties:
              type:
                type: string
                example: profile
              sub_type:
                type: string
                example: profileForm
              updated_at:
                type: string
                example: '2022-05-24T23:14:10.080Z'
              created_at:
                type: string
                example: '2022-05-24T23:14:10.080Z'
              id:
                type: string
                example: 2
              data:
                type: object
                properties:
                  templateName:
                    type: string
                    example: defaultTemplate
                  fields:
                    type: object
                    properties:
                      controls:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: name
                            label:
                              type: string
                              example: name
                            value:
                              type: string
                              example: ''
                            class:
                              type: string
                              example: ion-margin
                            type:
                              type: string
                              example: text
                            position:
                              type: string
                              example: floating
                            validators:
                              type: object
                              properties:
                                required:
                                  type: boolean
                                  example: true
                                minLength:
                                  type: number
                                  example: 10
      readForm400Response:
        description: Bad Request. Form not found
        type: object
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Form not found
          error:
            type: array
            items:
              type: string
            example: []

    cloudServices:
      cloudServicesResponse200:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Signed Url Generated Successfully.
          result:
            type: object
            properties:
              signed_url:
                type: string
                example: https://aws-bucket-storage-name.s3.ap-south-1.amazonaws.com/users/62832531a05cbd57b273aebb-1654149589875-laptop1.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=aws-access-key-id%2F20220602%2Fap-south-1%2Fs3%2Faws4_request&X-Amz-Date=20220602T055949Z&X-Amz-Expires=1800&X-Amz-Signature=0588b16fba45cb85efdc45749173c42ba26b47a9faa9bce5715c666b2657a4d4&X-Amz-SignedHeaders=host
              file_path:
                type: string
                example: users/62832531a05cbd57b273aebb-1654149589875-laptop1.jpg
              dest_file_ath:
                type: string
                example: users/62832531a05cbd57b273aebb-1654149589875-laptop1.jpg
      cloudServicesDownloadResponse200:
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Download Url Generated Successfully.
          result:
            type: string
            example: https://aws-bucket-storage-name.s3.ap-south-1.amazonaws.com/users/62832531a05cbd57b273aebb-1654149589875-image.jpg

    admin:
      createSystemUserRequest:
        type: object
        description: Creates System user
        required:
          - name
          - email
          - password
          - secret_code
        properties:
          name:
            type: string
            example: John Deo
            required: true
          email:
            type: string
            example: systemuser@mail.com
            required: true
          password:
            type: string
            format: password
            example: password
            required: true
          secret_code:
            type: string
            example: secret_code
            required: true
      createSystemUser201Response:
        type: object
        description: System User created
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Sign-up successful, Please wait while logging in.
          result:
            type: array
            items:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
      createSystemUser406Response:
        type: object
        description: System User alreay exist
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Admin User already exists.
          error:
            type: array
            items:
              type: string
            example: []
      loginSystemUserRequest:
        type: object
        description: Creates System user
        required:
          - email
          - password
        properties:
          email:
            type: string
            example: systemuser@mail.com
            required: true
          password:
            type: string
            format: password
            example: password
            required: true
      loginSystemUser200Response:
        description: System User logged
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: User logged in successfully.
          result:
            type: object
            properties:
              access_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjYyOGQ4YjljNGRmOGFkM2ExM2QyODNlNyIsImVtYWlsIjoic3lzdGVtQGFkbWluLmNvbSIsInJvbGUiOiJhZG1pbiJ9LCJpYXQiOjE2NTM0NDQ2MDQsImV4cCI6MTY1MzUzMTAwNH0.l6I0MC16FegRLDym_VwgxFsa97ApUuOKohj2k49cV0I
              refresh_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7Il9pZCI6IjYyOGQ4YjljNGRmOGFkM2ExM2QyODNlNyIsImVtYWlsIjoic3lzdGVtQGFkbWluLmNvbSIsInJvbGUiOiJhZG1pbiJ9LCJpYXQiOjE2NTM0NDQ2MDQsImV4cCI6MTY2OTI1NTgwNH0.TGDhpCVa0hTAbki8Dp5XGtQyqCMXu4Xu9L_72Yr4G1A
              user:
                type: object
                properties:
                  id:
                    type: number
                    example: 7
                  email:
                    type: string
                    example: hilbert29@yahoo.com
                  email_verified:
                    type: string
                    example: true
                  gender:
                    type: object
                    properties:
                      value:
                        type: string
                        example: male
                      label:
                        type: string
                        example: Male
                  location:
                    type: array
                    items:
                      type: string
                    example: []
                  about:
                    type: string
                    example: null
                  share_link:
                    type: string
                    example: null
                  status:
                    type: string
                    example: ACTIVE
                  last_logged_in_at:
                    type: string
                    format: date-time
                    example: 2023-07-25T11:50:35.044Z
                  has_accepted_terms_and_conditions:
                    type: boolean
                    example: true
                  languages:
                    type: array
                    items:
                      type: string
                    example: []
                  preferred_language:
                    type: object
                    properties:
                      value:
                        type: string
                        example: english
                      label:
                        type: string
                        example: English
                  organization_id:
                    type: number
                    example: 1
                  roles:
                    type: array
                    items:
                      type: number
                      example: 4
                  image:
                    type: string
                    example: https://cloudstorage.com/container/abc.png
                  deleted_at:
                    type: string
                    example: null
                  created_at:
                    type: string
                    format: date-time
                    example: 2023-07-24T14:37:56.393Z
                  updated_at:
                    type: string
                    format: date-time
                    example: 2023-07-25T11:50:35.044Z
                  user_roles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 4
                        title:
                          type: string
                          example: admin
                        user_type:
                          type: number
                          example: 0
                        status:
                          type: string
                          example: ACTIVE
      loginSystemUser400Response:
        type: object
        description: System user doesn't exist
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: User doesn't exist.
          error:
            type: array
            items:
              type: string
            example: []
      deleteUser202Response:
        type: object
        description: User Entity Deleted
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: User deleted successfully
          result:
            type: array
            items:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
      deleteUser400Response:
        type: object
        description: User Deleted
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Please enter correct ID
          error:
            type: array
            items:
              type: string
            example: []

    organization:
      createOrganizationRequest:
        type: object
        description: Creates Organization
        required:
          - name
          - code
          - description
        properties:
          name:
            type: string
            example: MentorEd
          code:
            type: string
            example: mentor112
          description:
            type: string
            example: testing
      createOrganization200Response:
        type: object
        description: Organization created successfully
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Organization created successfully
          result:
            type: array
            items:
              type: string
            example: []
      createOrganization400Response:
        type: object
        description: Organization already exists
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Organization already exists
          error:
            type: array
            items:
              type: string
            example: []
      updateOrganization200Response:
        type: object
        description: Organization updated
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Organization updated successfully
          result:
            type: array
            items:
              type: string
            example: []
      updateOrganization400Response:
        type: object
        description: Organization already exists
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Organization not found
          error:
            type: array
            items:
              type: string
            example: []
      organizationList200Response:
        type: object
        description: Organization list
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Organization fetched successfully.
          result:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      example: 1
                    name:
                      type: string
                      example: Shikshalokam
                    code:
                      type: string
                      example: sl
                    description:
                      type: string
                      example: Founded in 2017 ShikshaLokam is an Education Leadership Catalyst under the aegis of Advaith Foundation.
              count:
                type: number
                example: 1

    entity-type:
      createEntityTypeRequest:
        type: object
        description: entity type request
        properties:
          value:
            type: string
            example: location
          label:
            type: string
            example: Location
          data_type:
            type: string
            example: string
      createEntityType201Response:
        type: object
        description: entity type request
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Entity type created successfully.
          result:
            type: object
            properties:
              status:
                type: string
                example: ACTIVE
              id:
                type: number
                example: 5
              value:
                type: string
                example: location
              label:
                type: string
                example: Location
              data_type:
                type: string
                example: string
              created_by:
                type: number
                example: 15
              updated_by:
                type: number
                example: 15
              updated_at:
                type: string
                example: 2023-08-09T17:02:12.842Z
              created_at:
                type: string
                example: 2023-08-09T17:02:12.842Z
              allow_filtering:
                type: string
                format: nullable
              deleted_at:
                type: string
                example: null
      createEntityType400Response:
        type: object
        description: User entity already exist
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Entity type already exists
          error:
            type: array
            items:
              type: string
            example: []
      updateEntityType201Response:
        type: object
        description: Entity type updated
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Entity type updated successfully
          result:
            type: array
            items:
              type: string
            example: []
      updateEntityType400Response:
        type: object
        description: User entity already exist
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Validation failed, Entered data is incorrect!
          error:
            type: array
            items:
              type: object
              properties:
                location:
                  type: string
                  example: params
                param:
                  type: string
                  example: id
                msg:
                  type: string
                  example: id param is empty
      readEntityType201Response:
        type: object
        description: read entity type
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Entity fetched successfully
          result:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                value:
                  type: string
                  example: location
                label:
                  type: string
                  example: Location
                status:
                  type: string
                  example: ACTIVE
                data_type:
                  type: string
                  example: string
                created_by:
                  type: string
                  format: nullable
                updated_by:
                  type: string
                  format: nullable
                allow_filtering:
                  type: boolean
                created_at:
                  type: string
                  format: date-time
                  example: 2023-08-07T11:27:23.566Z
                updated_at:
                  type: string
                  format: date-time
                  example: 2023-08-07T11:27:23.566Z
                deleted_at:
                  type: string
                  format: nullable
                entities:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      entity_type_id:
                        type: number
                        example: 1
                      value:
                        type: string
                        example: AP
                      label:
                        type: string
                        example: Andhra Pradesh
                      status:
                        type: string
                        example: ACTIVE
                      type:
                        type: string
                        example: system
                      created_by:
                        type: string
                        format: nullable
                      updated_by:
                        type: string
                        format: nullable
                      created_at:
                        type: string
                        format: date-time
                        example: 2023-08-07T11:27:23.573Z
                      updated_at:
                        type: string
                        format: date-time
                        example: 2023-08-07T11:27:23.573Z
                      deleted_at:
                        type: string
                        format: nullable
      deleteUserEntity202Response:
        type: object
        description: Entity Deleted
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Entity deleted successfully
          result:
            type: array
            items:
              type: string
            example: []
      deleteUserEntity400Response:
        type: object
        description: Entity not found
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Entity not found
          error:
            type: array
            items:
              type: string
            example: []

    userRole:
      userRoleListResponse200:
        type: object
        description: Organization list
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: User Role list fetched successfully.
          result:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                title:
                  type: string
                  example: mentor
                user_type:
                  type: number
                  example: 0
                status:
                  type: string
                  example: ACTIVE
                created_at:
                  type: string
                  format: date-time
                  example: 2023-08-07T11:27:23.560Z
                updated_at:
                  type: string
                  format: date-time
                  example: 2023-08-07T11:27:23.560Z
                deleted_at:
                  type: date-time
                  example: null

    userentity:
      createUserEntityRequest:
        type: object
        required:
          - value
          - label
          - type
          - entity_type_id
        properties:
          value:
            type: string
            example: AP
          label:
            type: string
            example: Andhra Pradesh
          type:
            type: string
            example: string
          entity_type_id:
            type: integer
            example: 4
      createUserEntity201Response:
        type: object
        description: User entity created
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Entity created successfully
          result:
            type: array
            items:
              type: string
            example: []
      createUserEntity400Response:
        type: object
        description: Entity already exists
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Entity already exists
          error:
            type: array
            items:
              type: string
            example: []
      updateUserEntityRequest:
        type: object
        required:
          - value
          - label
          - type
          - entity_type_id
        description: User Entity update request
        properties:
          value:
            type: string
            example: AP
          label:
            type: string
            example: Andhra Pradesh
          type:
            type: string
            example: string
          entity_type_id:
            type: integer
            example: 4
      updateUserEntity202Response:
        type: object
        description: ntity Updated
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Entity updated successfully
          result:
            type: array
            items:
              type: string
            example: []
      updateUserEntity400Response:
        type: object
        description: Entity not found
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Entity not found
          error:
            type: array
            items:
              type: string
            example: []
      readUserEntity200Response:
        description: Entity fetched successfully
        type: object
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Entity fetched successfully
          result:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                entity_type_id:
                  type: number
                  example: 1
                value:
                  type: string
                  example: AP
                label:
                  type: string
                  example: Andhra Pradesh
                status:
                  type: string
                  example: ACTIVE
                type:
                  type: string
                  example: system
                created_by:
                  type: string
                  example: null
                updated_by:
                  type: string
                  example: null
                created_at:
                  type: string
                  example: 2023-08-07T11:27:23.573Z
                updated_at:
                  type: string
                  example: 2023-08-07T11:27:23.573Z
                deleted_at:
                  type: string
                  example: null

      deleteUserEntity202Response:
        type: object
        description: Entity Deleted
        properties:
          responseCode:
            type: string
            example: OK
          message:
            type: string
            example: Entity deleted successfully
          result:
            type: array
            items:
              type: string
            example: []
      deleteUserEntity400Response:
        type: object
        description: Entity not found
        properties:
          responseCode:
            type: string
            example: CLIENT_ERROR
          message:
            type: string
            example: Entity not found
          error:
            type: array
            items:
              type: string
            example: []

    securitySchemes:
    bearer:
      type: apiKey
      name: X-auth-token
      in: header
